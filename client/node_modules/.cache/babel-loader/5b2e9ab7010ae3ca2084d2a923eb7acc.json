{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/matej/Documents/2esys/client/src/components/airports/list/AirportListContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Button } from '@material-ui/core';\nimport { fetchAirports, fetchAirportById, createAirport, updateAirport, deleteAirport } from 'redux/reducers/airports.js';\nimport AirportList from 'components/airports/list/AirportList';\nimport AirportListHeader from 'components/airports/view/AirportListHeader';\nimport AirportForm from 'components/airports/form/AirportForm';\nimport 'assets/style/airportView.css';\n\nclass AirportListContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchAirports = () => {\n      this.props.fetchAirports();\n    };\n\n    this.handleCreateAirport = data => {\n      this.props.createAirport(data);\n      this.handleCloseModal();\n    };\n\n    this.handleDeleteAirport = id => {\n      this.props.deleteAirport(id);\n      this.handleCloseModal();\n    };\n\n    this.handleUpdateAirport = data => {\n      this.props.updateAirport(data);\n      this.handleCloseModal();\n    };\n\n    this.handleToggleCreateModal = () => {\n      const body = /*#__PURE__*/_jsxDEV(AirportForm, {\n        onSubmit: this.handleCreateAirport,\n        onCancel: this.handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this);\n\n      this.setState({\n        modalVisible: !this.state.modalVisible,\n        body\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        modalVisible: false,\n        body: ''\n      });\n    };\n\n    this.handleEditClick = id => {\n      const airportToUpdate = this.props.airports.find(airport => parseInt(airport.id) === parseInt(id));\n\n      const body = /*#__PURE__*/_jsxDEV(AirportForm, {\n        airport: airportToUpdate,\n        onSubmit: this.handleUpdateAirport,\n        onCancel: this.handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this);\n\n      this.setState({\n        modalVisible: true,\n        body\n      });\n    };\n\n    this.handleDeleteClick = id => {\n      const body = /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this airport?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"danger\",\n          variant: \"contained\",\n          onClick: () => this.handleDeleteAirport(id),\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleCloseModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this);\n\n      this.setState({\n        modalVisible: true,\n        body\n      });\n    };\n\n    this.state = {\n      modalVisible: false,\n      body: ''\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAirports();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.airports !== this.props.airports) {\n      this.fetchAirports();\n    }\n  }\n\n  render() {\n    const {\n      airports\n    } = this.props;\n    const {\n      modalVisible,\n      body\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AirportListHeader, {\n        onToggleCreateModal: this.handleToggleCreateModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), airports && airports.length > 0 ? /*#__PURE__*/_jsxDEV(AirportList, {\n        airports: airports || [],\n        onEditClick: this.handleEditClick,\n        onDeleteClick: this.handleDeleteClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this) : 'No data to display', modalVisible && /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"twoesys-airportListView__modal\",\n        open: true,\n        onClose: this.handleCloseModal,\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  airports: state.airportsReducer.airports\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAirports: () => dispatch(fetchAirports()),\n    fetchAirportById: id => dispatch(fetchAirportById(id)),\n    createAirport: data => dispatch(createAirport(data)),\n    updateAirport: data => dispatch(updateAirport(data)),\n    deleteAirport: id => dispatch(deleteAirport(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AirportListContainer);","map":{"version":3,"sources":["/home/matej/Documents/2esys/client/src/components/airports/list/AirportListContainer.jsx"],"names":["React","connect","Modal","Button","fetchAirports","fetchAirportById","createAirport","updateAirport","deleteAirport","AirportList","AirportListHeader","AirportForm","AirportListContainer","Component","constructor","props","handleCreateAirport","data","handleCloseModal","handleDeleteAirport","id","handleUpdateAirport","handleToggleCreateModal","body","setState","modalVisible","state","handleEditClick","airportToUpdate","airports","find","airport","parseInt","handleDeleteClick","componentDidMount","componentDidUpdate","prevProps","prevState","render","length","mapStateToProps","ownProps","airportsReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {Modal, Button} from '@material-ui/core';\nimport {\n  fetchAirports,\n  fetchAirportById,\n  createAirport,\n  updateAirport,\n  deleteAirport,\n} from 'redux/reducers/airports.js';\nimport AirportList from 'components/airports/list/AirportList';\nimport AirportListHeader from 'components/airports/view/AirportListHeader';\nimport AirportForm from 'components/airports/form/AirportForm';\nimport 'assets/style/airportView.css';\n\nclass AirportListContainer extends React.Component {\n  constructor (props) {\n    super (props);\n\n    this.state = {\n      modalVisible: false,\n      body: '',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAirports();\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    if (prevProps.airports !== this.props.airports) {\n      this.fetchAirports();\n    }\n  }\n\n  fetchAirports = () => {\n    this.props.fetchAirports();\n  };\n\n  handleCreateAirport = data => {\n    this.props.createAirport (data);\n    this.handleCloseModal();\n  };\n\n  handleDeleteAirport = id => {\n    this.props.deleteAirport (id);\n    this.handleCloseModal();\n  };\n\n  handleUpdateAirport = data => {\n    this.props.updateAirport(data);\n    this.handleCloseModal();\n  }\n\n  handleToggleCreateModal = () => {\n    const body = (\n      <AirportForm\n        onSubmit={this.handleCreateAirport}\n        onCancel={this.handleCloseModal}\n      />\n    );\n\n    this.setState({\n      modalVisible: !this.state.modalVisible,\n      body,\n    });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      modalVisible: false,\n      body: '',\n    });\n  };\n\n  handleEditClick = (id) => {\n    const airportToUpdate = this.props.airports.find(airport => parseInt(airport.id) === parseInt(id));\n    const body = (\n      <AirportForm\n        airport={airportToUpdate}\n        onSubmit={this.handleUpdateAirport}\n        onCancel={this.handleCloseModal}\n      />\n    );\n    this.setState({\n      modalVisible: true,\n      body,\n    });\n  };\n\n  handleDeleteClick = id => {\n    const body = (\n      <React.Fragment>\n        <p>Are you sure you want to delete this airport?</p>\n        <Button\n          color=\"danger\"\n          variant=\"contained\"\n          onClick={() => this.handleDeleteAirport (id)}\n        >\n          Confirm\n        </Button>\n        <Button onClick={this.handleCloseModal}>Cancel</Button>\n      </React.Fragment>\n    );\n    this.setState({\n      modalVisible: true,\n      body,\n    });\n  };\n\n  render() {\n    const {airports} = this.props;\n    const {modalVisible, body} = this.state;\n    return (\n      <React.Fragment>\n        <AirportListHeader onToggleCreateModal={this.handleToggleCreateModal} />\n        <br />\n        {airports && airports.length > 0\n          ? <AirportList\n              airports={airports || []}\n              onEditClick={this.handleEditClick}\n              onDeleteClick={this.handleDeleteClick}\n            />\n          : 'No data to display'}\n        {modalVisible &&\n          <Modal\n            className=\"twoesys-airportListView__modal\"\n            open={true}\n            onClose={this.handleCloseModal}\n          >\n            {body}\n          </Modal>}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  airports: state.airportsReducer.airports,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAirports: () => dispatch (fetchAirports()),\n    fetchAirportById: id => dispatch (fetchAirportById(id)),\n    createAirport: data => dispatch (createAirport(data)),\n    updateAirport: data => dispatch (updateAirport(data)),\n    deleteAirport: id => dispatch (deleteAirport(id)),\n  };\n};\n\nexport default connect (mapStateToProps, mapDispatchToProps) (\n  AirportListContainer\n);\n"]},"metadata":{},"sourceType":"module"}