{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/matej/Documents/2esys/client/src/components/airports/list/AirportListContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Button } from '@material-ui/core';\nimport { fetchAirports, deleteAirport } from 'redux/reducers/airports.js';\nimport AirportList from 'components/airports/list/AirportList';\nimport ComponentListHeader from 'components/common/ComponentListHeader';\nimport AirportCreateContainer from 'components/airports/create/AirportCreateContainer';\nimport AirportUpdateContainer from 'components/airports/update/AirportUpdateContainer';\nimport 'assets/style/modalView.css';\n\nclass AirportListContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchAirports = () => {\n      this.props.fetchAirports();\n    };\n\n    this.handleDeleteAirport = id => {\n      this.props.deleteAirport(id);\n      this.handleCloseModal();\n    };\n\n    this.handleOpenCreateModal = () => {\n      const body = /*#__PURE__*/_jsxDEV(AirportCreateContainer, {\n        onCancel: this.handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this);\n\n      this.setState({\n        modalVisible: true,\n        body\n      });\n    };\n\n    this.handleEditClick = id => {\n      const body = /*#__PURE__*/_jsxDEV(AirportUpdateContainer, {\n        airportId: id,\n        onCancel: this.handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this);\n\n      this.setState({\n        modalVisible: true,\n        body\n      });\n    };\n\n    this.handleDeleteClick = id => {\n      const body = /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this airport?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: () => this.handleDeleteAirport(id),\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleCloseModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this);\n\n      this.setState({\n        modalVisible: true,\n        body\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        modalVisible: false,\n        body: ''\n      });\n    };\n\n    this.state = {\n      modalVisible: false,\n      body: ''\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAirports();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.airports !== this.props.airports) {\n      console.log('prevProps: ', prevProps.airports === this.props.airports);\n      console.log('this.props: ', this.props.airports); //this.fetchAirports();\n\n      function comparer(otherArray) {\n        return function (current) {\n          return otherArray.filter(function (other) {\n            return other.value == current.value && other.display == current.display;\n          }).length == 0;\n        };\n      }\n\n      var onlyInA = prevProps.airports.filter(comparer(this.props.airports));\n      var onlyInB = this.props.airports.filter(comparer(prevProps.airports));\n      result = onlyInA.concat(onlyInB);\n      console.log(result);\n    }\n  }\n\n  render() {\n    const {\n      airports\n    } = this.props;\n    const {\n      modalVisible,\n      body\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ComponentListHeader, {\n        onOpenCreateModal: this.handleOpenCreateModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), airports && airports.length > 0 ? /*#__PURE__*/_jsxDEV(AirportList, {\n        airports: airports || [],\n        onEditClick: this.handleEditClick,\n        onDeleteClick: this.handleDeleteClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this) : 'No data to display', modalVisible && /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"twoesys-modalView__modal\",\n        open: true,\n        onClose: this.handleCloseModal,\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  airports: state.airportsReducer.airports\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAirports: () => dispatch(fetchAirports()),\n    deleteAirport: id => dispatch(deleteAirport(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AirportListContainer);","map":{"version":3,"sources":["/home/matej/Documents/2esys/client/src/components/airports/list/AirportListContainer.jsx"],"names":["React","connect","Modal","Button","fetchAirports","deleteAirport","AirportList","ComponentListHeader","AirportCreateContainer","AirportUpdateContainer","AirportListContainer","Component","constructor","props","handleDeleteAirport","id","handleCloseModal","handleOpenCreateModal","body","setState","modalVisible","handleEditClick","handleDeleteClick","state","componentDidMount","componentDidUpdate","prevProps","prevState","airports","console","log","comparer","otherArray","current","filter","other","value","display","length","onlyInA","onlyInB","result","concat","render","mapStateToProps","ownProps","airportsReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {Modal, Button} from '@material-ui/core';\nimport {fetchAirports, deleteAirport} from 'redux/reducers/airports.js';\nimport AirportList from 'components/airports/list/AirportList';\nimport ComponentListHeader from 'components/common/ComponentListHeader';\nimport AirportCreateContainer from 'components/airports/create/AirportCreateContainer';\nimport AirportUpdateContainer from 'components/airports/update/AirportUpdateContainer';\nimport 'assets/style/modalView.css';\n\nclass AirportListContainer extends React.Component {\n  constructor (props) {\n    super (props);\n\n    this.state = {\n      modalVisible: false,\n      body: '',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAirports();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.airports !== this.props.airports) {\n      console.log('prevProps: ', prevProps.airports === this.props.airports);\n      console.log('this.props: ', this.props.airports);\n      //this.fetchAirports();\n      function comparer(otherArray){\n      return function(current){\n        return otherArray.filter(function(other){\n          return other.value == current.value && other.display == current.display\n        }).length == 0;\n      }\n    }\n\n    var onlyInA = prevProps.airports.filter(comparer(this.props.airports));\n    var onlyInB = this.props.airports.filter(comparer(prevProps.airports));\n\n    result = onlyInA.concat(onlyInB);\n\n    console.log(result);\n    }\n  }\n\n  fetchAirports = () => {\n    this.props.fetchAirports();\n  };\n\n  handleDeleteAirport = id => {\n    this.props.deleteAirport (id);\n    this.handleCloseModal();\n  };\n\n  handleOpenCreateModal = () => {\n    const body = (\n      <AirportCreateContainer onCancel={this.handleCloseModal}/>\n    );\n\n    this.setState({\n      modalVisible: true,\n      body,\n    });\n  };\n\n  handleEditClick = (id) => {\n    const body = (\n      <AirportUpdateContainer\n        airportId={id}\n        onCancel={this.handleCloseModal}\n      />\n    );\n    this.setState({\n      modalVisible: true,\n      body,\n    });\n  };\n\n  handleDeleteClick = id => {\n    const body = (\n      <React.Fragment>\n        <p>Are you sure you want to delete this airport?</p>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => this.handleDeleteAirport (id)}\n        >\n          Confirm\n        </Button>\n        <Button onClick={this.handleCloseModal}>Cancel</Button>\n      </React.Fragment>\n    );\n    this.setState({\n      modalVisible: true,\n      body,\n    });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      modalVisible: false,\n      body: '',\n    });\n  };\n\n  render() {\n    const {airports} = this.props;\n    const {modalVisible, body} = this.state;\n    return (\n      <React.Fragment>\n        <ComponentListHeader onOpenCreateModal={this.handleOpenCreateModal} />\n        <br />\n        {airports && airports.length > 0\n          ? <AirportList\n              airports={airports || []}\n              onEditClick={this.handleEditClick}\n              onDeleteClick={this.handleDeleteClick}\n            />\n          : 'No data to display'}\n        {modalVisible &&\n          <Modal\n            className=\"twoesys-modalView__modal\"\n            open={true}\n            onClose={this.handleCloseModal}\n          >\n            {body}\n          </Modal>}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  airports: state.airportsReducer.airports,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAirports: () => dispatch (fetchAirports()),\n    deleteAirport: id => dispatch (deleteAirport(id)),\n  };\n};\n\nexport default connect (mapStateToProps, mapDispatchToProps)(AirportListContainer);\n"]},"metadata":{},"sourceType":"module"}