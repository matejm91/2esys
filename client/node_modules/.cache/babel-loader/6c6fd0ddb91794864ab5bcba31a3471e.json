{"ast":null,"code":"//actions\nconst AIRPORTS_FETCH = 'AIRPORTS_FETCH';\nconst AIRPORT_FETCH = 'AIRPORT_FETCH';\nconst AIRPORT_CREATE = 'AIRPORT_CREATE';\nconst AIRPORT_UPDATE = 'AIRPORT_UPDATE';\nconst AIRPORT_DELETE = 'AIRPORT_DELETE'; //effects\n\nexport const fetchAirports = payload => {\n  return dispatch => {\n    fetch('http://localhost:3001/airports').then(res => res.json()).then(airports => {\n      dispatch({\n        type: AIRPORTS_FETCH,\n        airports: [...airports]\n      });\n    });\n  };\n};\nexport const fetchAirportById = id => {\n  return dispatch => {\n    fetch(`http://localhost:3001/airport/${id}`).then(res => res.json()).then(airport => {\n      dispatch({\n        type: AIRPORT_FETCH,\n        airport\n      });\n    });\n  };\n};\nexport const createAirport = payload => {\n  const reqOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  };\n  return dispatch => {\n    fetch('http://localhost:3001/airports', reqOptions).then(data => {\n      dispatch({\n        type: AIRPORT_CREATE,\n        data\n      });\n    });\n  };\n};\nexport const updateAirport = payload => {\n  const reqOptions = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  };\n  return dispatch => {\n    fetch(`http://localhost:3001/airport/${payload.id}`, reqOptions).then(data => {\n      console.log('data - update: ', data);\n      dispatch({\n        type: AIRPORT_UPDATE,\n        data\n      });\n    });\n  };\n};\nexport const deleteAirport = id => {\n  return dispatch => {\n    fetch(`http://localhost:3001/airport/${id}`, {\n      method: 'DELETE'\n    }).then(res => {\n      dispatch({\n        type: AIRPORT_DELETE\n      });\n    });\n  };\n}; //reducer\n\nconst airportsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case AIRPORTS_FETCH:\n      {\n        return { ...state,\n          airports: [...action.airports]\n        };\n      }\n\n    case AIRPORT_FETCH:\n      {\n        return { ...state,\n          airport: action.airport[0]\n        };\n      }\n\n    case AIRPORT_CREATE:\n      {\n        console.log('state: ', state);\n        return { ...state,\n          airport: action.airport[0]\n        };\n      }\n\n    case AIRPORT_UPDATE:\n      {\n        return { ...state,\n          airport: action.airport[0]\n        };\n      }\n\n    case AIRPORT_DELETE:\n      {\n        return { ...state,\n          airport: action.airport[0]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default airportsReducer;","map":{"version":3,"sources":["/home/matej/Documents/2esys/client/src/redux/reducers/airports.js"],"names":["AIRPORTS_FETCH","AIRPORT_FETCH","AIRPORT_CREATE","AIRPORT_UPDATE","AIRPORT_DELETE","fetchAirports","payload","dispatch","fetch","then","res","json","airports","type","fetchAirportById","id","airport","createAirport","reqOptions","method","headers","body","JSON","stringify","data","updateAirport","console","log","deleteAirport","airportsReducer","state","action"],"mappings":"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","sourcesContent":["//actions\nconst AIRPORTS_FETCH = 'AIRPORTS_FETCH';\nconst AIRPORT_FETCH = 'AIRPORT_FETCH';\nconst AIRPORT_CREATE = 'AIRPORT_CREATE';\nconst AIRPORT_UPDATE = 'AIRPORT_UPDATE';\nconst AIRPORT_DELETE = 'AIRPORT_DELETE';\n\n//effects\nexport const fetchAirports = payload => {\n  return dispatch => {\n    fetch('http://localhost:3001/airports')\n    .then(res => res.json()).then(airports => {\n      dispatch({\n        type: AIRPORTS_FETCH,\n        airports: [...airports],\n      });\n    });\n  };\n};\n\nexport const fetchAirportById = (id) => {\n  return dispatch => {\n    fetch(`http://localhost:3001/airport/${id}`)\n    .then(res => res.json())\n    .then(airport => {\n      dispatch({\n        type: AIRPORT_FETCH,\n        airport,\n      });\n    });\n  };\n};\n\nexport const createAirport = (payload) => {\n  const reqOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\n    body: JSON.stringify(payload)\n  }\n\n  return dispatch => {\n    fetch('http://localhost:3001/airports', reqOptions)\n    .then(data => {\n      dispatch({\n        type: AIRPORT_CREATE,\n        data\n      });\n      }\n    )\n  }\n}\nexport const updateAirport = (payload) => {\n  const reqOptions = {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\n    body: JSON.stringify(payload)\n  }\n\n  return dispatch => {\n    fetch(`http://localhost:3001/airport/${payload.id}`, reqOptions)\n    .then(data => {\n      console.log('data - update: ', data);\n      dispatch({\n        type: AIRPORT_UPDATE,\n        data\n      });\n      }\n    )\n  }\n}\n\nexport const deleteAirport = (id) => {\n  return dispatch => {\n    fetch(`http://localhost:3001/airport/${id}`, { method: 'DELETE' })\n    .then((res) =>{\n      dispatch({\n        type: AIRPORT_DELETE,\n      });\n      }\n    )\n  }\n}\n\n//reducer\nconst airportsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case AIRPORTS_FETCH: {\n      return {\n        ...state,\n        airports: [...action.airports],\n      }\n    }\n\n    case AIRPORT_FETCH: {\n      return {\n        ...state,\n        airport: action.airport[0],\n      }\n    }\n\n    case AIRPORT_CREATE: {\n      console.log('state: ', state);\n      return {\n        ...state,\n        airport: action.airport[0],\n      }\n    }\n\n    case AIRPORT_UPDATE: {\n      return {\n        ...state,\n        airport: action.airport[0],\n      }\n    }\n\n    case AIRPORT_DELETE: {\n      return {\n        ...state,\n        airport: action.airport[0],\n      }\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default airportsReducer;"]},"metadata":{},"sourceType":"module"}