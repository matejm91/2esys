{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/matej/Documents/2esys/client/src/components/airports/list/AirportListContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Button } from '@material-ui/core';\nimport { fetchAirports, deleteAirport } from 'redux/reducers/airports.js';\nimport AirportList from 'components/airports/list/AirportList';\nimport ComponentListHeader from 'components/common/ComponentListHeader';\nimport AirportCreateContainer from 'components/airports/create/AirportCreateContainer';\nimport AirportUpdateContainer from 'components/airports/update/AirportUpdateContainer';\nimport 'assets/style/modalView.css';\n\nclass AirportListContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.comparer = otherArray => {\n      return function (current) {\n        return otherArray.filter(function (other) {\n          return other.value == current.value && other.display == current.display;\n        }).length == 0;\n      };\n    };\n\n    this.fetchAirports = () => {\n      this.props.fetchAirports();\n    };\n\n    this.handleDeleteAirport = id => {\n      this.props.deleteAirport(id);\n      this.handleCloseModal();\n    };\n\n    this.handleOpenCreateModal = () => {\n      const body = /*#__PURE__*/_jsxDEV(AirportCreateContainer, {\n        onCancel: this.handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this);\n\n      this.setState({\n        modalVisible: true,\n        body\n      });\n    };\n\n    this.handleEditClick = id => {\n      const body = /*#__PURE__*/_jsxDEV(AirportUpdateContainer, {\n        airportId: id,\n        onCancel: this.handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this);\n\n      this.setState({\n        modalVisible: true,\n        body\n      });\n    };\n\n    this.handleDeleteClick = id => {\n      const body = /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this airport?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: () => this.handleDeleteAirport(id),\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleCloseModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this);\n\n      this.setState({\n        modalVisible: true,\n        body\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        modalVisible: false,\n        body: ''\n      });\n    };\n\n    this.state = {\n      modalVisible: false,\n      body: ''\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAirports();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      airports\n    } = this.props;\n    const {\n      airports: prevAirports\n    } = prevProps;\n\n    if (airports !== prevAirports) {\n      console.log('prevProps: ', airports === prevAirports);\n      console.log('this.props: ', this.props.airports); //this.fetchAirports();\n    }\n  }\n\n  render() {\n    const {\n      airports\n    } = this.props;\n    const {\n      modalVisible,\n      body\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ComponentListHeader, {\n        onOpenCreateModal: this.handleOpenCreateModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), airports && airports.length > 0 ? /*#__PURE__*/_jsxDEV(AirportList, {\n        airports: airports || [],\n        onEditClick: this.handleEditClick,\n        onDeleteClick: this.handleDeleteClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this) : 'No data to display', modalVisible && /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"twoesys-modalView__modal\",\n        open: true,\n        onClose: this.handleCloseModal,\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  airports: state.airportsReducer.airports\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAirports: () => dispatch(fetchAirports()),\n    deleteAirport: id => dispatch(deleteAirport(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AirportListContainer);","map":{"version":3,"sources":["/home/matej/Documents/2esys/client/src/components/airports/list/AirportListContainer.jsx"],"names":["React","connect","Modal","Button","fetchAirports","deleteAirport","AirportList","ComponentListHeader","AirportCreateContainer","AirportUpdateContainer","AirportListContainer","Component","constructor","props","comparer","otherArray","current","filter","other","value","display","length","handleDeleteAirport","id","handleCloseModal","handleOpenCreateModal","body","setState","modalVisible","handleEditClick","handleDeleteClick","state","componentDidMount","componentDidUpdate","prevProps","prevState","airports","prevAirports","console","log","render","mapStateToProps","ownProps","airportsReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {Modal, Button} from '@material-ui/core';\nimport {fetchAirports, deleteAirport} from 'redux/reducers/airports.js';\nimport AirportList from 'components/airports/list/AirportList';\nimport ComponentListHeader from 'components/common/ComponentListHeader';\nimport AirportCreateContainer from 'components/airports/create/AirportCreateContainer';\nimport AirportUpdateContainer from 'components/airports/update/AirportUpdateContainer';\nimport 'assets/style/modalView.css';\n\nclass AirportListContainer extends React.Component {\n  constructor (props) {\n    super (props);\n\n    this.state = {\n      modalVisible: false,\n      body: '',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAirports();\n  }\n\n  comparer = (otherArray) => {\n        return function(current){\n          return otherArray.filter(function(other){\n            return other.value == current.value && other.display == current.display\n          }).length == 0;\n        }\n      }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {airports} = this.props;\n    const {airports: prevAirports} = prevProps;\n    if (airports !== prevAirports) {\n      console.log('prevProps: ', airports === prevAirports);\n      console.log('this.props: ', this.props.airports);\n      //this.fetchAirports();\n    }\n  }\n\n  fetchAirports = () => {\n    this.props.fetchAirports();\n  };\n\n  handleDeleteAirport = id => {\n    this.props.deleteAirport (id);\n    this.handleCloseModal();\n  };\n\n  handleOpenCreateModal = () => {\n    const body = (\n      <AirportCreateContainer onCancel={this.handleCloseModal}/>\n    );\n\n    this.setState({\n      modalVisible: true,\n      body,\n    });\n  };\n\n  handleEditClick = (id) => {\n    const body = (\n      <AirportUpdateContainer\n        airportId={id}\n        onCancel={this.handleCloseModal}\n      />\n    );\n    this.setState({\n      modalVisible: true,\n      body,\n    });\n  };\n\n  handleDeleteClick = id => {\n    const body = (\n      <React.Fragment>\n        <p>Are you sure you want to delete this airport?</p>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => this.handleDeleteAirport (id)}\n        >\n          Confirm\n        </Button>\n        <Button onClick={this.handleCloseModal}>Cancel</Button>\n      </React.Fragment>\n    );\n    this.setState({\n      modalVisible: true,\n      body,\n    });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      modalVisible: false,\n      body: '',\n    });\n  };\n\n  render() {\n    const {airports} = this.props;\n    const {modalVisible, body} = this.state;\n    return (\n      <React.Fragment>\n        <ComponentListHeader onOpenCreateModal={this.handleOpenCreateModal} />\n        <br />\n        {airports && airports.length > 0\n          ? <AirportList\n              airports={airports || []}\n              onEditClick={this.handleEditClick}\n              onDeleteClick={this.handleDeleteClick}\n            />\n          : 'No data to display'}\n        {modalVisible &&\n          <Modal\n            className=\"twoesys-modalView__modal\"\n            open={true}\n            onClose={this.handleCloseModal}\n          >\n            {body}\n          </Modal>}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  airports: state.airportsReducer.airports,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAirports: () => dispatch (fetchAirports()),\n    deleteAirport: id => dispatch (deleteAirport(id)),\n  };\n};\n\nexport default connect (mapStateToProps, mapDispatchToProps)(AirportListContainer);\n"]},"metadata":{},"sourceType":"module"}