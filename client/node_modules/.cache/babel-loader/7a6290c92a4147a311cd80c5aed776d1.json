{"ast":null,"code":"//actions\nconst AIRPORTS_FETCH = 'AIRPORTS_FETCH';\nconst AIRPORT_FETCH = 'AIRPORT_FETCH';\nconst AIRPORT_CREATE = 'AIRPORT_CREATE';\nconst AIRPORT_UPDATE = 'AIRPORT_UPDATE';\nconst AIRPORT_DELETE = 'AIRPORT_DELETE'; //effects\n\nexport const fetchAirports = payload => {\n  return dispatch => {\n    fetch('http://localhost:3001/airports').then(res => res.json()).then(airports => {\n      console.log(airports);\n      dispatch({\n        type: AIRPORTS_FETCH,\n        airports\n      });\n    });\n  };\n};\n\nconst fetchAirportByIdEffect = id => {\n  return dispatch => {\n    fetch(`http://localhost:3001/airport/${id}`).then(airport => {\n      console.log('airport: ', airport);\n      dispatch({\n        type: AIRPORT_FETCH,\n        airports\n      });\n    });\n  };\n};\n\nconst createAirportEffect = payload => {\n  console.log('payload: ', payload);\n  const reqOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  };\n  return dispatch => {\n    fetch('http://localhost:3001/airports', reqOptions).then(res => res.json()).then(data => console.log('res data: ', data));\n  };\n};\n\nconst updateAirportEffect = payload => {\n  axios.put().then();\n};\n\nconst deleteAirportEffect = payload => {\n  axios.delete().then();\n}; //reducer\n\n\nconst airportsReducer = (state = {\n  airports: []\n}, action) => {\n  console.log('state: ', state);\n  console.log('action: ', action.airports);\n  return state;\n};\n\nexport default airportsReducer;","map":{"version":3,"sources":["/home/matej/Documents/2esys/client/src/redux/reducers/airports.js"],"names":["AIRPORTS_FETCH","AIRPORT_FETCH","AIRPORT_CREATE","AIRPORT_UPDATE","AIRPORT_DELETE","fetchAirports","payload","dispatch","fetch","then","res","json","airports","console","log","type","fetchAirportByIdEffect","id","airport","createAirportEffect","reqOptions","method","headers","body","JSON","stringify","data","updateAirportEffect","axios","put","deleteAirportEffect","delete","airportsReducer","state","action"],"mappings":"AAAA;AACA,MAAMA,cAAc,GAAG,gBAAvB;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,cAAc,GAAG,gBAAvB,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAGC,OAAO,IAAI;AACtC,SAAOC,QAAQ,IAAI;AACjBC,IAAAA,KAAK,CAAC,gCAAD,CAAL,CAAwCC,IAAxC,CAA6CC,GAAG,IAC9CA,GAAG,CAACC,IAAJ,EADF,EAEIF,IAFJ,CAESG,QAAQ,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACFL,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEf,cADC;AAEPY,QAAAA;AAFO,OAAD,CAAR;AAID,KARD;AASD,GAVD;AAWD,CAZM;;AAcP,MAAMI,sBAAsB,GAAIC,EAAD,IAAQ;AACrC,SAAOV,QAAQ,IAAI;AACjBC,IAAAA,KAAK,CAAE,iCAAgCS,EAAG,EAArC,CAAL,CAA6CR,IAA7C,CAAkDS,OAAO,IAAI;AAC3DL,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBI,OAAzB;AACAX,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEd,aADC;AAEPW,QAAAA;AAFO,OAAD,CAAR;AAID,KAND;AAOD,GARD;AASD,CAVD;;AAYA,MAAMO,mBAAmB,GAAIb,OAAD,IAAa;AACvCO,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,OAAzB;AACA,QAAMc,UAAU,GAAG;AACjBC,IAAAA,MAAM,EAAE,MADS;AAEjBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFQ;AAGjBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,OAAf;AAHW,GAAnB;AAMA,SAAOC,QAAQ,IAAI;AACjBC,IAAAA,KAAK,CAAC,gCAAD,EAAmCY,UAAnC,CAAL,CACCX,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMiB,IAAI,IAAIb,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BY,IAA1B,CAFd;AAID,GALD;AAMD,CAdD;;AAeA,MAAMC,mBAAmB,GAAIrB,OAAD,IAAa;AACvCsB,EAAAA,KAAK,CAACC,GAAN,GAAYpB,IAAZ;AACD,CAFD;;AAGA,MAAMqB,mBAAmB,GAAIxB,OAAD,IAAa;AACvCsB,EAAAA,KAAK,CAACG,MAAN,GAAetB,IAAf;AACD,CAFD,C,CAIA;;;AACA,MAAMuB,eAAe,GAAG,CAACC,KAAK,GAAG;AAACrB,EAAAA,QAAQ,EAAE;AAAX,CAAT,EAAyBsB,MAAzB,KAAoC;AAC1DrB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBmB,KAAvB;AACApB,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBoB,MAAM,CAACtB,QAA/B;AAEA,SAAOqB,KAAP;AACD,CALD;;AAOA,eAAeD,eAAf","sourcesContent":["//actions\nconst AIRPORTS_FETCH = 'AIRPORTS_FETCH';\nconst AIRPORT_FETCH = 'AIRPORT_FETCH';\nconst AIRPORT_CREATE = 'AIRPORT_CREATE';\nconst AIRPORT_UPDATE = 'AIRPORT_UPDATE';\nconst AIRPORT_DELETE = 'AIRPORT_DELETE';\n\n//effects\nexport const fetchAirports = payload => {\n  return dispatch => {\n    fetch('http://localhost:3001/airports').then(res =>\n      res.json()\n      ).then(airports => {\n        console.log(airports);\n      dispatch({\n        type: AIRPORTS_FETCH,\n        airports,\n      });\n    });\n  };\n};\n\nconst fetchAirportByIdEffect = (id) => {\n  return dispatch => {\n    fetch(`http://localhost:3001/airport/${id}`).then(airport => {\n      console.log('airport: ', airport)\n      dispatch({\n        type: AIRPORT_FETCH,\n        airports,\n      });\n    });\n  };\n};\n\nconst createAirportEffect = (payload) => {\n  console.log('payload: ', payload);\n  const reqOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload)\n  }\n\n  return dispatch => {\n    fetch('http://localhost:3001/airports', reqOptions)\n    .then(res => res.json())\n    .then(data => console.log('res data: ', data)\n    )\n  }\n}\nconst updateAirportEffect = (payload) => {\n  axios.put().then()\n}\nconst deleteAirportEffect = (payload) => {\n  axios.delete().then()\n}\n\n//reducer\nconst airportsReducer = (state = {airports: []}, action) => {\n  console.log('state: ', state);\n  console.log('action: ', action.airports);\n\n  return state;\n};\n\nexport default airportsReducer;"]},"metadata":{},"sourceType":"module"}