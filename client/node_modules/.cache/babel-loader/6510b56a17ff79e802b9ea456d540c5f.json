{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/matej/Documents/2esys/client/src/components/airports/update/AirportUpdateContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { updateAirport, fetchAirportById } from 'redux/reducers/airports.js';\nimport AirportForm from 'components/airports/form/AirportForm';\n\nclass AirportUpdateContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.fetchAirportById = id => {\n      this.props.fetchAirportById(id);\n    };\n\n    this.handleUpdateAirport = data => {\n      this.props.updateAirport(data);\n      this.handleCloseModal();\n    };\n\n    this.handleCloseModal = () => {\n      this.props.onCancel();\n    };\n  }\n\n  componentDidMount() {\n    console.log('id: ', this.props.airportId);\n\n    if (this.props.airportId) {\n      this.fetchAirportById(this.props.airportId);\n    }\n  }\n\n  render() {\n    console.log('airport: ', this.props.airport);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: this.props.airport && /*#__PURE__*/_jsxDEV(AirportForm, {\n        airport: this.props.airport,\n        onSubmit: this.handleUpdateAirport,\n        onCancel: this.handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  airport: state.airportsReducer.airport\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAirportById: id => dispatch(fetchAirportById(id)),\n    updateAirport: data => dispatch(updateAirport(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AirportUpdateContainer);","map":{"version":3,"sources":["/home/matej/Documents/2esys/client/src/components/airports/update/AirportUpdateContainer.jsx"],"names":["React","connect","updateAirport","fetchAirportById","AirportForm","AirportUpdateContainer","Component","id","props","handleUpdateAirport","data","handleCloseModal","onCancel","componentDidMount","console","log","airportId","render","airport","mapStateToProps","state","ownProps","airportsReducer","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,EAAuBC,gBAAvB,QAA8C,4BAA9C;AACA,OAAOC,WAAP,MAAwB,sCAAxB;;AAEA,MAAMC,sBAAN,SAAqCL,KAAK,CAACM,SAA3C,CAAqD;AAAA;AAAA;;AAAA,SAQnDH,gBARmD,GAQhCI,EAAE,IAAI;AACvB,WAAKC,KAAL,CAAWL,gBAAX,CAA4BI,EAA5B;AACD,KAVkD;;AAAA,SAYnDE,mBAZmD,GAY7BC,IAAI,IAAI;AAC5B,WAAKF,KAAL,CAAWN,aAAX,CAAyBQ,IAAzB;AACA,WAAKC,gBAAL;AACD,KAfkD;;AAAA,SAiBnDA,gBAjBmD,GAiBhC,MAAM;AACvB,WAAKH,KAAL,CAAWI,QAAX;AACD,KAnBkD;AAAA;;AACnDC,EAAAA,iBAAiB,GAAI;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKP,KAAL,CAAWQ,SAA/B;;AACA,QAAI,KAAKR,KAAL,CAAWQ,SAAf,EAA0B;AACxB,WAAKb,gBAAL,CAAsB,KAAKK,KAAL,CAAWQ,SAAjC;AACD;AACF;;AAeDC,EAAAA,MAAM,GAAI;AACRH,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKP,KAAL,CAAWU,OAApC;AACA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,gBACG,KAAKV,KAAL,CAAWU,OAAX,iBACC,QAAC,WAAD;AACE,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAWU,OADtB;AAEE,QAAA,QAAQ,EAAE,KAAKT,mBAFjB;AAGE,QAAA,QAAQ,EAAE,KAAKE;AAHjB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAjCkD;;AAoCrD,MAAMQ,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5CH,EAAAA,OAAO,EAAEE,KAAK,CAACE,eAAN,CAAsBJ;AADa,CAAtB,CAAxB;;AAIA,MAAMK,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLrB,IAAAA,gBAAgB,EAAEI,EAAE,IAAIiB,QAAQ,CAAErB,gBAAgB,CAAEI,EAAF,CAAlB,CAD3B;AAELL,IAAAA,aAAa,EAAEQ,IAAI,IAAIc,QAAQ,CAAEtB,aAAa,CAAEQ,IAAF,CAAf;AAF1B,GAAP;AAID,CALD;;AAOA,eAAeT,OAAO,CAAEkB,eAAF,EAAmBI,kBAAnB,CAAP,CACblB,sBADa,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {updateAirport, fetchAirportById} from 'redux/reducers/airports.js';\nimport AirportForm from 'components/airports/form/AirportForm';\n\nclass AirportUpdateContainer extends React.Component {\n  componentDidMount () {\n    console.log('id: ', this.props.airportId);\n    if (this.props.airportId) {\n      this.fetchAirportById(this.props.airportId);\n    }\n  }\n\n  fetchAirportById = id => {\n    this.props.fetchAirportById(id);\n  }\n\n  handleUpdateAirport = data => {\n    this.props.updateAirport(data);\n    this.handleCloseModal();\n  };\n\n  handleCloseModal = () => {\n    this.props.onCancel();\n  };\n\n  render () {\n    console.log('airport: ', this.props.airport);\n    return (\n      <React.Fragment>\n        {this.props.airport &&\n          <AirportForm\n            airport={this.props.airport}\n            onSubmit={this.handleUpdateAirport}\n            onCancel={this.handleCloseModal}\n          />}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  airport: state.airportsReducer.airport,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAirportById: id => dispatch (fetchAirportById (id)),\n    updateAirport: data => dispatch (updateAirport (data)),\n  };\n};\n\nexport default connect (mapStateToProps, mapDispatchToProps) (\n  AirportUpdateContainer\n);\n"]},"metadata":{},"sourceType":"module"}