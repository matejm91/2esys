{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/matej/Documents/2esys/client/src/components/countries/list/CountryListContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Button } from '@material-ui/core';\nimport { fetchCountries, createCountry, updateCountry, deleteCountry } from 'redux/actions/countries.js';\nimport CountryList from 'components/countries/list/CountryList';\nimport ComponentListHeader from 'components/common/ComponentListHeader';\nimport CountryUpdateContainer from 'components/countries/update/CountryUpdateContainer';\nimport CountryCreateContainer from 'components/countries/create/CountryCreateContainer';\nimport 'assets/style/modalView.css';\nimport 'assets/style/listView.css';\n\nclass CountryListContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchCountries = () => {\n      this.props.fetchCountries();\n    };\n\n    this.handleDeleteCountry = id => {\n      this.props.deleteCountry(id);\n      this.handleCloseModal();\n    };\n\n    this.handleOpenCreateModal = () => {\n      const body = /*#__PURE__*/_jsxDEV(CountryCreateContainer, {\n        onCancel: this.handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this);\n\n      this.setState({\n        modalVisible: true,\n        body\n      });\n    };\n\n    this.handleEditClick = id => {\n      const body = /*#__PURE__*/_jsxDEV(CountryUpdateContainer, {\n        countryId: id,\n        onCancel: this.handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this);\n\n      this.setState({\n        modalVisible: true,\n        body\n      });\n    };\n\n    this.handleDeleteClick = id => {\n      const body = /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this country?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: () => this.handleDeleteCountry(id),\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleCloseModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this);\n\n      this.setState({\n        modalVisible: true,\n        body\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        modalVisible: false,\n        body: ''\n      });\n    };\n\n    this.state = {\n      modalVisible: false,\n      body: ''\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCountries();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      countries\n    } = this.props;\n    const {\n      countries: prevCountries\n    } = prevProps;\n\n    if (JSON.stringify(countries) !== JSON.stringify(prevCountries)) {\n      this.fetchCountries();\n    }\n  }\n\n  render() {\n    const {\n      modalVisible,\n      body\n    } = this.state;\n    const {\n      countries\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ComponentListHeader, {\n        onOpenCreateModal: this.handleOpenCreateModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), countries && countries.length > 0 ? /*#__PURE__*/_jsxDEV(CountryList, {\n        countries: countries || [],\n        onEditClick: this.handleEditClick,\n        onDeleteClick: this.handleDeleteClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twoesys-listView__noData\",\n        children: \"No data to display!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), modalVisible && /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"twoesys-modalView__modal\",\n        open: true,\n        onClose: this.handleCloseModal,\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  countries: state.countriesReducer.countries\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCountries: () => dispatch(fetchCountries()),\n    deleteCountry: id => dispatch(deleteCountry(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountryListContainer);","map":{"version":3,"sources":["/home/matej/Documents/2esys/client/src/components/countries/list/CountryListContainer.jsx"],"names":["React","connect","Modal","Button","fetchCountries","createCountry","updateCountry","deleteCountry","CountryList","ComponentListHeader","CountryUpdateContainer","CountryCreateContainer","CountryListContainer","Component","constructor","props","handleDeleteCountry","id","handleCloseModal","handleOpenCreateModal","body","setState","modalVisible","handleEditClick","handleDeleteClick","state","componentDidMount","componentDidUpdate","prevProps","prevState","countries","prevCountries","JSON","stringify","render","length","mapStateToProps","ownProps","countriesReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {Modal, Button} from '@material-ui/core';\nimport {fetchCountries, createCountry, updateCountry, deleteCountry} from 'redux/actions/countries.js';\nimport CountryList from 'components/countries/list/CountryList';\nimport ComponentListHeader from 'components/common/ComponentListHeader';\nimport CountryUpdateContainer from 'components/countries/update/CountryUpdateContainer';\nimport CountryCreateContainer from 'components/countries/create/CountryCreateContainer';\nimport 'assets/style/modalView.css';\nimport 'assets/style/listView.css';\n\nclass CountryListContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modalVisible: false,\n      body: '',\n    }\n  }\n  \n  componentDidMount() {\n    this.fetchCountries();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {countries} = this.props;\n    const {countries: prevCountries} = prevProps;\n    if (JSON.stringify(countries) !== JSON.stringify(prevCountries)) {\n      this.fetchCountries();\n    }\n  }\n\n  fetchCountries = () => {\n    this.props.fetchCountries();\n  }\n\n  handleDeleteCountry = id => {\n    this.props.deleteCountry(id);\n    this.handleCloseModal();\n  };\n\n  handleOpenCreateModal = () => {\n    const body = (\n      <CountryCreateContainer\n        onCancel={this.handleCloseModal}\n      />\n    );\n\n    this.setState({\n      modalVisible: true,\n      body,\n    });\n  };\n\n  handleEditClick = (id) => {\n    const body = (\n      <CountryUpdateContainer\n        countryId={id}\n        onCancel={this.handleCloseModal}\n      />\n    );\n    this.setState({\n      modalVisible: true,\n      body,\n    });\n  };\n\n  handleDeleteClick = id => {\n    const body = (\n      <React.Fragment>\n        <p>Are you sure you want to delete this country?</p>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => this.handleDeleteCountry(id)}\n        >\n          Confirm\n        </Button>\n        <Button onClick={this.handleCloseModal}>Cancel</Button>\n      </React.Fragment>\n    );\n    this.setState({\n      modalVisible: true,\n      body,\n    });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      modalVisible: false,\n      body: '',\n    });\n  };\n\n  render() {\n    const {modalVisible, body} = this.state;\n    const {countries} = this.props;\n    return (\n      <React.Fragment>\n        <ComponentListHeader onOpenCreateModal={this.handleOpenCreateModal} />\n        <br/>\n        {countries && countries.length > 0\n          ? <CountryList\n              countries={countries || []}\n              onEditClick={this.handleEditClick}\n              onDeleteClick={this.handleDeleteClick}\n            />\n          : <div className='twoesys-listView__noData'>No data to display!</div>}\n        {modalVisible && \n          <Modal className='twoesys-modalView__modal' open={true} onClose={this.handleCloseModal}>\n            {body}\n          </Modal>\n        }\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  countries: state.countriesReducer.countries,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchCountries: () => dispatch(fetchCountries()),\n    deleteCountry: id => dispatch (deleteCountry(id)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountryListContainer);"]},"metadata":{},"sourceType":"module"}