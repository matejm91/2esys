{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/matej/Documents/2esys/client/src/components/airports/update/AirportUpdateContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { updateAirport, fetchAirportById, fetchAirports } from 'redux/actions/airports.js';\nimport { fetchCountries } from \"redux/actions/countries.js\";\nimport AirportForm from 'components/airports/form/AirportForm';\n\nclass AirportUpdateContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.fetchAirportById = id => {\n      this.props.fetchAirportById(id);\n    };\n\n    this.fetchCountries = () => {\n      this.props.fetchCountries();\n    };\n\n    this.handleUpdateAirport = data => {\n      this.props.updateAirport(data);\n      this.handleCloseModal();\n    };\n\n    this.handleCloseModal = () => {\n      this.props.onCancel();\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCountries();\n\n    if (this.props.airportId) {\n      this.fetchAirportById(this.props.airportId);\n    }\n  }\n\n  render() {\n    const {\n      airport,\n      airports,\n      countries\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: airport && /*#__PURE__*/_jsxDEV(AirportForm, {\n        airport: airport,\n        countries: countries,\n        onSubmit: this.handleUpdateAirport,\n        onCancel: this.handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  airport: state.airportsReducer.airport,\n  airports: state.airportsReducer.airports,\n  countries: state.countriesReducer.countries\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAirports: () => dispatch(fetchAirports()),\n    fetchAirportById: id => dispatch(fetchAirportById(id)),\n    updateAirport: data => dispatch(updateAirport(data.id, data)),\n    fetchCountries: () => dispatch(fetchCountries())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AirportUpdateContainer);","map":{"version":3,"sources":["/home/matej/Documents/2esys/client/src/components/airports/update/AirportUpdateContainer.jsx"],"names":["React","connect","updateAirport","fetchAirportById","fetchAirports","fetchCountries","AirportForm","AirportUpdateContainer","Component","id","props","handleUpdateAirport","data","handleCloseModal","onCancel","componentDidMount","airportId","render","airport","airports","countries","mapStateToProps","state","ownProps","airportsReducer","countriesReducer","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,EAAuBC,gBAAvB,EAAyCC,aAAzC,QAA6D,2BAA7D;AACA,SAAQC,cAAR,QAA6B,4BAA7B;AACA,OAAOC,WAAP,MAAwB,sCAAxB;;AAEA,MAAMC,sBAAN,SAAqCP,KAAK,CAACQ,SAA3C,CAAqD;AAAA;AAAA;;AAAA,SAQnDL,gBARmD,GAQhCM,EAAE,IAAI;AACvB,WAAKC,KAAL,CAAWP,gBAAX,CAA4BM,EAA5B;AACD,KAVkD;;AAAA,SAYnDJ,cAZmD,GAYlC,MAAM;AACrB,WAAKK,KAAL,CAAWL,cAAX;AACD,KAdkD;;AAAA,SAgBnDM,mBAhBmD,GAgB7BC,IAAI,IAAI;AAC5B,WAAKF,KAAL,CAAWR,aAAX,CAAyBU,IAAzB;AACA,WAAKC,gBAAL;AACD,KAnBkD;;AAAA,SAqBnDA,gBArBmD,GAqBhC,MAAM;AACvB,WAAKH,KAAL,CAAWI,QAAX;AACD,KAvBkD;AAAA;;AACnDC,EAAAA,iBAAiB,GAAI;AACnB,SAAKV,cAAL;;AACA,QAAI,KAAKK,KAAL,CAAWM,SAAf,EAA0B;AACxB,WAAKb,gBAAL,CAAsB,KAAKO,KAAL,CAAWM,SAAjC;AACD;AACF;;AAmBDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,OAAD;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA;AAApB,QAAiC,KAAKV,KAA5C;AACA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,gBACGQ,OAAO,iBACN,QAAC,WAAD;AACE,QAAA,OAAO,EAAEA,OADX;AAEE,QAAA,SAAS,EAAEE,SAFb;AAGE,QAAA,QAAQ,EAAE,KAAKT,mBAHjB;AAIE,QAAA,QAAQ,EAAE,KAAKE;AAJjB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAtCkD;;AAyCrD,MAAMQ,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5CL,EAAAA,OAAO,EAAEI,KAAK,CAACE,eAAN,CAAsBN,OADa;AAE5CC,EAAAA,QAAQ,EAAEG,KAAK,CAACE,eAAN,CAAsBL,QAFY;AAG5CC,EAAAA,SAAS,EAAEE,KAAK,CAACG,gBAAN,CAAuBL;AAHU,CAAtB,CAAxB;;AAMA,MAAMM,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLvB,IAAAA,aAAa,EAAE,MAAMuB,QAAQ,CAACvB,aAAa,EAAd,CADxB;AAELD,IAAAA,gBAAgB,EAAEM,EAAE,IAAIkB,QAAQ,CAACxB,gBAAgB,CAACM,EAAD,CAAjB,CAF3B;AAGLP,IAAAA,aAAa,EAAEU,IAAI,IAAIe,QAAQ,CAACzB,aAAa,CAACU,IAAI,CAACH,EAAN,EAAUG,IAAV,CAAd,CAH1B;AAILP,IAAAA,cAAc,EAAE,MAAMsB,QAAQ,CAACtB,cAAc,EAAf;AAJzB,GAAP;AAMD,CAPD;;AASA,eAAeJ,OAAO,CAAEoB,eAAF,EAAmBK,kBAAnB,CAAP,CACbnB,sBADa,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {updateAirport, fetchAirportById, fetchAirports} from 'redux/actions/airports.js';\nimport {fetchCountries} from \"redux/actions/countries.js\";\nimport AirportForm from 'components/airports/form/AirportForm';\n\nclass AirportUpdateContainer extends React.Component {\n  componentDidMount () {\n    this.fetchCountries();\n    if (this.props.airportId) {\n      this.fetchAirportById(this.props.airportId);\n    }\n  }\n\n  fetchAirportById = id => {\n    this.props.fetchAirportById(id);\n  }\n\n  fetchCountries = () => {\n    this.props.fetchCountries();\n  }\n\n  handleUpdateAirport = data => {\n    this.props.updateAirport(data);\n    this.handleCloseModal();\n  };\n\n  handleCloseModal = () => {\n    this.props.onCancel();\n  };\n\n  render() {\n    const {airport, airports, countries} = this.props;\n    return (\n      <React.Fragment>\n        {airport &&\n          <AirportForm\n            airport={airport}\n            countries={countries}\n            onSubmit={this.handleUpdateAirport}\n            onCancel={this.handleCloseModal}\n          />}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  airport: state.airportsReducer.airport,\n  airports: state.airportsReducer.airports,\n  countries: state.countriesReducer.countries,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAirports: () => dispatch(fetchAirports()),\n    fetchAirportById: id => dispatch(fetchAirportById(id)),\n    updateAirport: data => dispatch(updateAirport(data.id, data)),\n    fetchCountries: () => dispatch(fetchCountries()),\n  };\n};\n\nexport default connect (mapStateToProps, mapDispatchToProps) (\n  AirportUpdateContainer\n);\n"]},"metadata":{},"sourceType":"module"}