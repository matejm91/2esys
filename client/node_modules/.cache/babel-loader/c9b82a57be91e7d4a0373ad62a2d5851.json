{"ast":null,"code":"//actions\nexport const AIRPORTS_FETCH = 'AIRPORTS_FETCH';\nexport const AIRPORT_FETCH = 'AIRPORT_FETCH';\nexport const AIRPORT_CREATE = 'AIRPORT_CREATE';\nexport const AIRPORT_UPDATE = 'AIRPORT_UPDATE';\nexport const AIRPORT_DELETE = 'AIRPORT_DELETE'; //reducer\n\nconst airportsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case AIRPORTS_FETCH:\n      {\n        return { ...state,\n          airports: [...action.airports]\n        };\n      }\n\n    case AIRPORT_FETCH:\n      {\n        return { ...state,\n          airport: action.airports\n        };\n      }\n\n    case AIRPORT_UPDATE:\n      {\n        return [...state.filter(airport => airport.id !== action.airport.id), Object.assign({}, action.airport)];\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default airportsReducer;","map":{"version":3,"sources":["/home/matej/Documents/2esys/client/src/redux/reducers/airports.js"],"names":["AIRPORTS_FETCH","AIRPORT_FETCH","AIRPORT_CREATE","AIRPORT_UPDATE","AIRPORT_DELETE","airportsReducer","state","action","type","airports","airport","filter","id","Object","assign"],"mappings":"AAAA;AACA,OAAO,MAAMA,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAGP;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGM,KADE;AAELG,UAAAA,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACE,QAAX;AAFL,SAAP;AAID;;AAED,SAAKR,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGK,KADE;AAELI,UAAAA,OAAO,EAAEH,MAAM,CAACE;AAFX,SAAP;AAID;;AAED,SAAKN,cAAL;AAAqB;AACnB,eAAO,CACL,GAAGG,KAAK,CAACK,MAAN,CAAaD,OAAO,IAAIA,OAAO,CAACE,EAAR,KAAeL,MAAM,CAACG,OAAP,CAAeE,EAAtD,CADE,EAELC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,MAAM,CAACG,OAAzB,CAFK,CAAP;AAID;;AAED;AACE,aAAOJ,KAAP;AAvBJ;AAyBD,CA1BD;;AA4BA,eAAeD,eAAf","sourcesContent":["//actions\nexport const AIRPORTS_FETCH = 'AIRPORTS_FETCH';\nexport const AIRPORT_FETCH = 'AIRPORT_FETCH';\nexport const AIRPORT_CREATE = 'AIRPORT_CREATE';\nexport const AIRPORT_UPDATE = 'AIRPORT_UPDATE';\nexport const AIRPORT_DELETE = 'AIRPORT_DELETE';\n\n\n//reducer\nconst airportsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case AIRPORTS_FETCH: {\n      return {\n        ...state,\n        airports: [...action.airports],\n      }\n    }\n\n    case AIRPORT_FETCH: {\n      return {\n        ...state,\n        airport: action.airports,\n      }\n    }\n\n    case AIRPORT_UPDATE: {\n      return [\n        ...state.filter(airport => airport.id !== action.airport.id),\n        Object.assign({}, action.airport)\n      ]\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default airportsReducer;"]},"metadata":{},"sourceType":"module"}