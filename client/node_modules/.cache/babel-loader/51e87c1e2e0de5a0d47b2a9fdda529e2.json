{"ast":null,"code":"//actions\nconst COUNTRIES_FETCH = 'COUNTRIES_FETCH';\nconst COUNTRY_CREATE = 'COUNTRY_CREATE';\nconst COUNTRY_UPDATE = 'COUNTRY_UPDATE';\nconst COUNTRY_DELETE = 'COUNTRY_DELETE'; //effects\n\nexport const fetchCountries = payload => {\n  return dispatch => {\n    fetch('http://localhost:3001/countries').then(res => res.json()).then(countries => {\n      dispatch({\n        type: COUNTRIES_FETCH,\n        countries: [...countries]\n      });\n    });\n  };\n};\nexport const createCountry = payload => {\n  const reqOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  };\n  return dispatch => {\n    fetch('http://localhost:3001/countries', reqOptions).then(res => res.json()).then(data => {\n      dispatch({\n        type: COUNTRY_CREATE,\n        data\n      });\n    });\n  };\n};\nexport const updateCountry = payload => {\n  const reqOptions = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  };\n  return dispatch => {\n    fetch(`http://localhost:3001/country/${payload.id}`, reqOptions).then(res => res.json()).then(data => {\n      dispatch({\n        type: COUNTRY_UPDATE,\n        data\n      });\n    });\n  };\n};\nexport const deleteCountry = id => {\n  return dispatch => {\n    fetch(`http://localhost:3001/country/${id}`, {\n      method: 'DELETE'\n    }).then(res => {\n      dispatch({\n        type: COUNTRY_DELETE\n      });\n    });\n  };\n}; //reducer\n\nconst countriesReducer = (state = {\n  countries: []\n}, action) => {\n  switch (action.type) {\n    case COUNTRIES_FETCH:\n      {\n        return { ...state,\n          countries: [...action.countries]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default countriesReducer;","map":{"version":3,"sources":["/home/matej/Documents/2esys/client/src/redux/reducers/countries.js"],"names":["COUNTRIES_FETCH","COUNTRY_CREATE","COUNTRY_UPDATE","COUNTRY_DELETE","fetchCountries","payload","dispatch","fetch","then","res","json","countries","type","createCountry","reqOptions","method","headers","body","JSON","stringify","data","updateCountry","id","deleteCountry","countriesReducer","state","action"],"mappings":"AAAA;AACA,MAAMA,eAAe,GAAG,iBAAxB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,cAAc,GAAG,gBAAvB,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAGC,OAAO,IAAI;AACvC,SAAOC,QAAQ,IAAI;AACjBC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CAAyCC,IAAzC,CAA8CC,GAAG,IAC/CA,GAAG,CAACC,IAAJ,EADF,EAEIF,IAFJ,CAESG,SAAS,IAAI;AACpBL,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAEZ,eADC;AAEPW,QAAAA,SAAS,EAAE,CAAC,GAAGA,SAAJ;AAFJ,OAAD,CAAR;AAID,KAPD;AAQD,GATD;AAUD,CAXM;AAaP,OAAO,MAAME,aAAa,GAAIR,OAAD,IAAa;AACxC,QAAMS,UAAU,GAAG;AACjBC,IAAAA,MAAM,EAAE,MADS;AAEjBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFQ;AAGjBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,OAAf;AAHW,GAAnB;AAMA,SAAOC,QAAQ,IAAI;AACjBC,IAAAA,KAAK,CAAC,iCAAD,EAAoCO,UAApC,CAAL,CACCN,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMY,IAAI,IAAI;AACZd,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAEX,cADC;AAEPmB,QAAAA;AAFO,OAAD,CAAR;AAIC,KAPH;AASD,GAVD;AAWD,CAlBM;AAmBP,OAAO,MAAMC,aAAa,GAAIhB,OAAD,IAAa;AACxC,QAAMS,UAAU,GAAG;AACjBC,IAAAA,MAAM,EAAE,KADS;AAEjBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFQ;AAGjBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,OAAf;AAHW,GAAnB;AAMA,SAAOC,QAAQ,IAAI;AACjBC,IAAAA,KAAK,CAAE,iCAAgCF,OAAO,CAACiB,EAAG,EAA7C,EAAgDR,UAAhD,CAAL,CACCN,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMY,IAAI,IAAI;AACZd,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAEV,cADC;AAEPkB,QAAAA;AAFO,OAAD,CAAR;AAIC,KAPH;AASD,GAVD;AAWD,CAlBM;AAoBP,OAAO,MAAMG,aAAa,GAAID,EAAD,IAAQ;AACnC,SAAOhB,QAAQ,IAAI;AACjBC,IAAAA,KAAK,CAAE,iCAAgCe,EAAG,EAArC,EAAwC;AAAEP,MAAAA,MAAM,EAAE;AAAV,KAAxC,CAAL,CACCP,IADD,CACOC,GAAD,IAAQ;AACZH,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAET;AADC,OAAD,CAAR;AAGC,KALH;AAOD,GARD;AASD,CAVM,C,CAYP;;AACA,MAAMqB,gBAAgB,GAAG,CAACC,KAAK,GAAG;AAACd,EAAAA,SAAS,EAAE;AAAZ,CAAT,EAA0Be,MAA1B,KAAqC;AAC5D,UAAQA,MAAM,CAACd,IAAf;AACE,SAAKZ,eAAL;AAAsB;AACpB,eAAO,EACL,GAAGyB,KADE;AAELd,UAAAA,SAAS,EAAE,CAAC,GAAGe,MAAM,CAACf,SAAX;AAFN,SAAP;AAID;;AAED;AACE,aAAOc,KAAP;AATJ;AAWD,CAZD;;AAcA,eAAeD,gBAAf","sourcesContent":["//actions\nconst COUNTRIES_FETCH = 'COUNTRIES_FETCH';\nconst COUNTRY_CREATE = 'COUNTRY_CREATE';\nconst COUNTRY_UPDATE = 'COUNTRY_UPDATE';\nconst COUNTRY_DELETE = 'COUNTRY_DELETE';\n\n//effects\nexport const fetchCountries = payload => {\n  return dispatch => {\n    fetch('http://localhost:3001/countries').then(res =>\n      res.json()\n      ).then(countries => {\n      dispatch({\n        type: COUNTRIES_FETCH,\n        countries: [...countries],\n      });\n    });\n  };\n};\n\nexport const createCountry = (payload) => {\n  const reqOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload)\n  }\n\n  return dispatch => {\n    fetch('http://localhost:3001/countries', reqOptions)\n    .then(res => res.json())\n    .then(data => {\n      dispatch({\n        type: COUNTRY_CREATE,\n        data\n      });\n      }\n    )\n  }\n}\nexport const updateCountry = (payload) => {\n  const reqOptions = {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload)\n  }\n\n  return dispatch => {\n    fetch(`http://localhost:3001/country/${payload.id}`, reqOptions)\n    .then(res => res.json())\n    .then(data => {\n      dispatch({\n        type: COUNTRY_UPDATE,\n        data\n      });\n      }\n    )\n  }\n}\n\nexport const deleteCountry = (id) => {\n  return dispatch => {\n    fetch(`http://localhost:3001/country/${id}`, { method: 'DELETE' })\n    .then((res) =>{\n      dispatch({\n        type: COUNTRY_DELETE,\n      });\n      }\n    )\n  }\n}\n\n//reducer\nconst countriesReducer = (state = {countries: []}, action) => {\n  switch (action.type) {\n    case COUNTRIES_FETCH: {\n      return {\n        ...state,\n        countries: [...action.countries],\n      }\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default countriesReducer;"]},"metadata":{},"sourceType":"module"}