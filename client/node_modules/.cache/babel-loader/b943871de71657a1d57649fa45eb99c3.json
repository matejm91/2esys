{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/matej/Documents/2esys/client/src/components/airports/form/AirportForm.jsx\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Input, Select, MenuItem, InputLabel, Button } from '@material-ui/core';\nimport GoogleMapReact from 'google-map-react';\nimport RoomIcon from '@material-ui/icons/Room';\nimport 'assets/style/formView.css';\n\nconst MyInput = ({\n  field,\n  form,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(Input, {\n    className: \"twoesys-formView__input\",\n    ...field,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 11\n  }, this);\n};\n\n_c = MyInput;\n\nconst MySelect = ({\n  field,\n  form,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      id: \"helper-label\",\n      children: \"Choose country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"helper-label\",\n      className: \"twoesys-formView__input\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n  return;\n};\n\n_c2 = MySelect;\n\nclass AirportForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = data => {\n      data.location = `${this.state.lat}, ${this.state.lng}`;\n\n      if (this.props.airport && this.props.airport.id) {\n        data.id = this.props.airport.id;\n      }\n\n      this.props.onSubmit(data);\n    };\n\n    this.handleCancel = () => {\n      this.props.onCancel();\n    };\n\n    this.mapLoaded = map => {\n      this.googleMaps = map;\n    };\n\n    this.onMarkerMove = (key, currentValues, newValues) => {\n      this.setState({\n        draggable: false\n      });\n      this.changeLatitude(null, newValues.lat);\n      this.changeLongitude(null, newValues.lng);\n    };\n\n    this.onMarkerDown = () => {\n      this.setState({\n        draggable: true\n      });\n    };\n\n    this.changeLatitude = (e, val) => {\n      this.setState({\n        lat: val\n      });\n    };\n\n    this.changeLongitude = (e, val) => {\n      this.setState({\n        lng: val\n      });\n    };\n\n    this.state = {\n      mapZoom: 12,\n      draggable: true,\n      lat: this.props.airport === undefined ? 45.746686123840526 : parseFloat(this.props.airport.location.split(', ')[0]),\n      lng: this.props.airport === undefined ? 16.045964602812305 : parseFloat(this.props.airport.location.split(', ')[1])\n    };\n    this.googleMaps = null;\n  }\n\n  render() {\n    const {\n      airport,\n      airports,\n      countries\n    } = this.props;\n    let availableAirports;\n\n    if (airports && airports.length) {\n      availableAirports = airports.filter(availableAirport => airport.id !== availableAirport.id);\n    } else {\n      availableAirports = [];\n    }\n\n    const marker = {\n      id: airport === undefined ? null : airport.id,\n      size: {\n        width: 62,\n        height: 60\n      },\n      origin: {\n        x: 15 / 62,\n        y: 1\n      },\n      withText: false\n    };\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: airport && airport.name ? airport.name : '',\n        country: airport && airport.country ? airport.country : '',\n        departingFrom: airport && airport.departingFrom ? airport.departingFrom : '',\n        landingTo: airport && airport.landingTo ? airport.landingTo : ''\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        this.handleSubmit(values);\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\",\n          component: MyInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"country\",\n          name: \"country\",\n          placeholder: \"Country\",\n          component: MySelect,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: country.id,\n            children: country.name\n          }, country.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 42\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"departingFrom\",\n          name: \"departingFrom\",\n          placeholder: \"Departing from\",\n          component: MyInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"landingTo\",\n          name: \"landingTo\",\n          placeholder: \"Landing to\",\n          component: MyInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"location\",\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 300,\n            width: 500\n          },\n          children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n            bootstrapURLKeys: {\n              key: 'AIzaSyCE_hqyzF4Zm4T3py8ieljazaeyiwa678A'\n            },\n            name: \"map\",\n            defaultZoom: 10,\n            center: {\n              lat: airport === undefined ? 45.746686123840526 : parseFloat(airport.location.split(', ')[0]),\n              lng: airport === undefined ? 16.045964602812305 : parseFloat(airport.location.split(', ')[1])\n            },\n            onChildMouseUp: this.onMarkerDown,\n            onChildMouseMove: this.onMarkerMove,\n            onGoogleApiLoaded: this.mapLoaded,\n            yesIWantToUseGoogleMapApiInternals: true,\n            draggable: this.state.draggable,\n            children: /*#__PURE__*/_jsxDEV(RoomIcon, {\n              marker: marker,\n              lat: this.state.lat,\n              lng: this.state.lng\n            }, airport === undefined ? null : airport.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"twoesys-formView__button\",\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"twoesys-formView__button\",\n          variant: \"contained\",\n          onClick: this.handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AirportForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyInput\");\n$RefreshReg$(_c2, \"MySelect\");","map":{"version":3,"sources":["/home/matej/Documents/2esys/client/src/components/airports/form/AirportForm.jsx"],"names":["React","Formik","Form","Field","ErrorMessage","Input","Select","MenuItem","InputLabel","Button","GoogleMapReact","RoomIcon","MyInput","field","form","props","MySelect","AirportForm","Component","constructor","handleSubmit","data","location","state","lat","lng","airport","id","onSubmit","handleCancel","onCancel","mapLoaded","map","googleMaps","onMarkerMove","key","currentValues","newValues","setState","draggable","changeLatitude","changeLongitude","onMarkerDown","e","val","mapZoom","undefined","parseFloat","split","render","airports","countries","availableAirports","length","filter","availableAirport","marker","size","width","height","origin","x","y","withText","name","country","departingFrom","landingTo","values","setSubmitting","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\nimport {Input, Select, MenuItem, InputLabel, Button} from '@material-ui/core';\nimport GoogleMapReact from 'google-map-react';\nimport RoomIcon from '@material-ui/icons/Room';\nimport 'assets/style/formView.css';\n\nconst MyInput = ({ field, form, ...props }) => {\n   return <Input className='twoesys-formView__input' {...field} {...props} />;\n};\n\nconst MySelect = ({ field, form, ...props}) => {\n  return (\n    <React.Fragment>\n      <InputLabel id='helper-label'>Choose country</InputLabel>\n      <Select labelId='helper-label' className='twoesys-formView__input' {...field} {...props} />\n    </React.Fragment>\n  )\n  return ;\n};\n\nclass AirportForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapZoom: 12,\n      draggable: true,\n      lat: this.props.airport === undefined ? 45.746686123840526 : parseFloat(this.props.airport.location.split(', ')[0]),\n      lng: this.props.airport === undefined ? 16.045964602812305 : parseFloat(this.props.airport.location.split(', ')[1]),\n    };\n\n    this.googleMaps = null;\n  }\n\n  handleSubmit = data => {\n    data.location = `${this.state.lat}, ${this.state.lng}`\n\n    if (this.props.airport && this.props.airport.id) {\n      data.id = this.props.airport.id;\n    }\n\n    this.props.onSubmit(data);\n  };\n\n  handleCancel = () => {\n    this.props.onCancel();\n  };\n\n  mapLoaded = (map) => {\n    this.googleMaps = map;\n  };\n\n  onMarkerMove = (key, currentValues, newValues) => {\n    this.setState({\n      draggable: false,\n    });\n    this.changeLatitude(null, newValues.lat);\n    this.changeLongitude(null, newValues.lng);\n  };\n\n  onMarkerDown = () => {\n    this.setState({\n      draggable: true,\n    });\n  };\n\n  changeLatitude = (e, val) => {\n    this.setState({\n      lat: val,\n    });\n  };\n\n  changeLongitude = (e, val) => {\n    this.setState({\n      lng: val,\n    });\n  };\n\n  render () {\n    const {airport, airports, countries} = this.props;\n\n    let availableAirports; \n    \n    if (airports && airports.length) {\n      availableAirports = airports.filter(availableAirport => airport.id !== availableAirport.id)\n    } else {\n      availableAirports = [];\n    }\n\n    const marker = {\n      id: airport === undefined ? null : airport.id,\n      size: { width: 62, height: 60 },\n      origin: { x: 15 / 62, y: 1 },\n      withText: false,\n    };\n\n    return (\n      <Formik\n        initialValues={{\n          name: airport && airport.name ? airport.name : '',\n          country: airport && airport.country ? airport.country : '',\n          departingFrom: airport && airport.departingFrom ? airport.departingFrom : '',\n          landingTo: airport && airport.landingTo ? airport.landingTo : '',\n        }}\n        onSubmit={(values, {setSubmitting}) => {\n          this.handleSubmit(values);\n        }}\n      >\n        {({isSubmitting}) => (\n          <Form>\n            <Field id=\"name\" name=\"name\" placeholder=\"Name\" component={MyInput} />\n            <Field id=\"country\" name=\"country\" placeholder=\"Country\" component={MySelect}>\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              {countries.map(country => (<MenuItem key={country.id} value={country.id}>{country.name}</MenuItem>))}\n            </Field>\n            <Field id=\"departingFrom\" name=\"departingFrom\" placeholder=\"Departing from\"  component={MyInput} />\n            <Field id=\"landingTo\" name=\"landingTo\" placeholder=\"Landing to\" component={MyInput} />\n            <br />\n            <label htmlFor=\"location\">Location</label>\n              <div style={{ height: 300, width: 500 }}>\n                <GoogleMapReact\n                  bootstrapURLKeys={{key: 'AIzaSyCE_hqyzF4Zm4T3py8ieljazaeyiwa678A'}}\n                  name=\"map\"\n                  defaultZoom={10}\n                  center={{\n                    lat: airport === undefined ? 45.746686123840526 : parseFloat(airport.location.split(', ')[0]),\n                    lng: airport === undefined ? 16.045964602812305 : parseFloat(airport.location.split(', ')[1]),\n                  }}\n                  onChildMouseUp={this.onMarkerDown}\n                  onChildMouseMove={this.onMarkerMove}\n                  onGoogleApiLoaded={this.mapLoaded}\n                  yesIWantToUseGoogleMapApiInternals\n                  draggable={this.state.draggable}\n                >\n                  <RoomIcon\n                    key={airport === undefined ? null : airport.id}\n                    marker={marker}\n                    lat={this.state.lat}\n                    lng={this.state.lng}\n                  />\n                </GoogleMapReact>\n              </div>\n            <br />\n            <Button className='twoesys-formView__button' type=\"submit\" color=\"primary\" variant=\"contained\">\n              Submit\n            </Button>\n            <Button className='twoesys-formView__button' variant=\"contained\" onClick={this.handleCancel}>\n              Cancel\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport default AirportForm;\n"]},"metadata":{},"sourceType":"module"}