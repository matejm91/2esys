{"ast":null,"code":"import * as services from 'redux/services/services.js';\nexport const AIRPORTS_FETCH = 'AIRPORTS_FETCH';\nexport const AIRPORT_FETCH = 'AIRPORT_FETCH';\nexport const AIRPORT_CREATE = 'AIRPORT_CREATE';\nexport const AIRPORT_UPDATE = 'AIRPORT_UPDATE';\nexport const AIRPORT_DELETE = 'AIRPORT_DELETE';\nexport const fetchAirports = () => {\n  return dispatch => {\n    services.get('airports').then(res => dispatch({\n      type: AIRPORTS_FETCH,\n      airports: res.data.data\n    })).catch(err => console.log(err));\n  };\n};\nexport const fetchAirportById = id => {\n  return dispatch => {\n    services.get(`airport/${id}`).then(res => dispatch({\n      type: AIRPORT_FETCH,\n      airport: res.data.data\n    }));\n  };\n};\nexport const createAirport = payload => {\n  return dispatch => {\n    services.post('airport').then(res => dispatch({\n      type: AIRPORT_CREATE\n    }));\n  };\n};\nexport const updateAirport = (id, payload) => {\n  return dispatch => {\n    services.put(`airport/${id}`).then(res => dispatch({\n      type: AIRPORT_UPDATE\n    }));\n  };\n};\nexport const deleteAirport = id => {\n  return dispatch => {\n    services.delete(`airport/${id}`).then(res => {\n      dispatch({\n        type: AIRPORT_DELETE\n      });\n      dispatch(fetchAirports());\n    });\n  };\n};","map":{"version":3,"sources":["/home/matej/Documents/2esys/client/src/redux/actions/airports.js"],"names":["services","AIRPORTS_FETCH","AIRPORT_FETCH","AIRPORT_CREATE","AIRPORT_UPDATE","AIRPORT_DELETE","fetchAirports","dispatch","get","then","res","type","airports","data","catch","err","console","log","fetchAirportById","id","airport","createAirport","payload","post","updateAirport","put","deleteAirport","delete"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,4BAA1B;AAEA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAOC,QAAQ,IAAI;AACjBP,IAAAA,QAAQ,CAACQ,GAAT,CAAa,UAAb,EACCC,IADD,CACMC,GAAG,IAAIH,QAAQ,CAAC;AACpBI,MAAAA,IAAI,EAAEV,cADc;AAEpBW,MAAAA,QAAQ,EAAEF,GAAG,CAACG,IAAJ,CAASA;AAFC,KAAD,CADrB,EAKCC,KALD,CAKOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALd;AAMD,GAPD;AAQD,CATM;AAWP,OAAO,MAAMG,gBAAgB,GAAGC,EAAE,IAAI;AACpC,SAAOZ,QAAQ,IAAI;AACjBP,IAAAA,QAAQ,CAACQ,GAAT,CAAc,WAAUW,EAAG,EAA3B,EACCV,IADD,CACMC,GAAG,IAAIH,QAAQ,CAAC;AACpBI,MAAAA,IAAI,EAAET,aADc;AAEpBkB,MAAAA,OAAO,EAAEV,GAAG,CAACG,IAAJ,CAASA;AAFE,KAAD,CADrB;AAKD,GAND;AAOD,CARM;AAUP,OAAO,MAAMQ,aAAa,GAAGC,OAAO,IAAI;AACtC,SAAOf,QAAQ,IAAI;AACjBP,IAAAA,QAAQ,CAACuB,IAAT,CAAc,SAAd,EACCd,IADD,CACMC,GAAG,IAAIH,QAAQ,CAAC;AACpBI,MAAAA,IAAI,EAAER;AADc,KAAD,CADrB;AAID,GALD;AAMD,CAPM;AASP,OAAO,MAAMqB,aAAa,GAAG,CAACL,EAAD,EAAKG,OAAL,KAAiB;AAC5C,SAAOf,QAAQ,IAAI;AACjBP,IAAAA,QAAQ,CAACyB,GAAT,CAAc,WAAUN,EAAG,EAA3B,EACCV,IADD,CACMC,GAAG,IAAIH,QAAQ,CAAC;AACpBI,MAAAA,IAAI,EAAEP;AADc,KAAD,CADrB;AAID,GALD;AAMD,CAPM;AASP,OAAO,MAAMsB,aAAa,GAAGP,EAAE,IAAI;AACjC,SAAOZ,QAAQ,IAAI;AACjBP,IAAAA,QAAQ,CAAC2B,MAAT,CAAiB,WAAUR,EAAG,EAA9B,EACCV,IADD,CACMC,GAAG,IAAI;AACXH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEN;AADC,OAAD,CAAR;AAGAE,MAAAA,QAAQ,CAACD,aAAa,EAAd,CAAR;AACD,KAND;AAOD,GARD;AASD,CAVM","sourcesContent":["import * as services from 'redux/services/services.js';\n\nexport const AIRPORTS_FETCH = 'AIRPORTS_FETCH';\nexport const AIRPORT_FETCH = 'AIRPORT_FETCH';\nexport const AIRPORT_CREATE = 'AIRPORT_CREATE';\nexport const AIRPORT_UPDATE = 'AIRPORT_UPDATE';\nexport const AIRPORT_DELETE = 'AIRPORT_DELETE';\n\nexport const fetchAirports = () => {\n  return dispatch => {\n    services.get('airports')\n    .then(res => dispatch({\n      type: AIRPORTS_FETCH,\n      airports: res.data.data\n    }))\n    .catch(err => console.log(err))\n  }\n}\n\nexport const fetchAirportById = id => {\n  return dispatch => {\n    services.get(`airport/${id}`)\n    .then(res => dispatch({\n      type: AIRPORT_FETCH,\n      airport: res.data.data\n    }))\n  }\n}\n\nexport const createAirport = payload => {\n  return dispatch => {\n    services.post('airport')\n    .then(res => dispatch({\n      type: AIRPORT_CREATE\n    }))\n  }\n}\n\nexport const updateAirport = (id, payload) => {\n  return dispatch => {\n    services.put(`airport/${id}`)\n    .then(res => dispatch({\n      type: AIRPORT_UPDATE\n    }))\n  }\n}\n\nexport const deleteAirport = id => {\n  return dispatch => {\n    services.delete(`airport/${id}`)\n    .then(res => {\n      dispatch({\n        type: AIRPORT_DELETE\n      });\n      dispatch(fetchAirports());\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}