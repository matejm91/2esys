{"ast":null,"code":"//actions\nconst AIRPORTS_FETCH = 'AIRPORTS_FETCH';\nconst AIRPORT_FETCH = 'AIRPORT_FETCH';\nconst AIRPORT_CREATE = 'AIRPORT_CREATE';\nconst AIRPORT_UPDATE = 'AIRPORT_UPDATE';\nconst AIRPORT_DELETE = 'AIRPORT_DELETE'; //effects\n\nexport const fetchAirports = payload => {\n  return dispatch => {\n    fetch('http://localhost:3001/airports').then(res => res.json()).then(airports => {\n      dispatch({\n        type: AIRPORTS_FETCH,\n        airports: [...airports]\n      });\n    });\n  };\n};\nexport const fetchAirportById = id => {\n  return dispatch => {\n    fetch(`http://localhost:3001/airport/${id}`).then(res => res.json()).then(airport => {\n      dispatch({\n        type: AIRPORT_FETCH,\n        airport\n      });\n    });\n  };\n};\nexport const createAirport = payload => {\n  const reqOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  };\n  return dispatch => {\n    fetch('http://localhost:3001/airports', reqOptions).then(res => {\n      console.log(res.body);\n      return res.json();\n    }).then(data => {\n      dispatch({\n        type: AIRPORT_CREATE,\n        data\n      });\n    });\n  };\n};\n/*export const updateAirport = (payload) => {\n  const reqOptions = {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload)\n  }\n\n  return dispatch => {\n    fetch(`http://localhost:3001/airport/${payload.id}`, reqOptions)\n    .then(res => res.json())\n    .then(data => {\n      dispatch({\n        type: AIRPORT_UPDATE,\n        data\n      });\n      }\n    )\n  }\n}*/\n//new\n\nexport const updateAirport = airport => {\n  const reqOptions = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  };\n  return dispatch => {\n    return fetch(`http://localhost:3001/airport/${payload.id}`, reqOptions).then(response => {\n      dispatch({\n        type: AIRPORT_UPDATE,\n        data\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n};\nexport const deleteAirport = id => {\n  return dispatch => {\n    fetch(`http://localhost:3001/airport/${id}`, {\n      method: 'DELETE'\n    }).then(res => {\n      dispatch({\n        type: AIRPORT_DELETE\n      });\n    });\n  };\n}; //reducer\n\nconst airportsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case AIRPORTS_FETCH:\n      {\n        return { ...state,\n          airports: [...action.airports]\n        };\n      }\n\n    case AIRPORT_FETCH:\n      {\n        return { ...state,\n          airport: action.airports\n        };\n      }\n\n    case AIRPORT_UPDATE:\n      {\n        return [...state.filter(airport => airport.id !== action.airport.id), Object.assign({}, action.airport)];\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default airportsReducer;","map":{"version":3,"sources":["/home/matej/Documents/2esys/client/src/redux/reducers/airports.js"],"names":["AIRPORTS_FETCH","AIRPORT_FETCH","AIRPORT_CREATE","AIRPORT_UPDATE","AIRPORT_DELETE","fetchAirports","payload","dispatch","fetch","then","res","json","airports","type","fetchAirportById","id","airport","createAirport","reqOptions","method","headers","body","JSON","stringify","console","log","data","updateAirport","response","catch","error","deleteAirport","airportsReducer","state","action","filter","Object","assign"],"mappings":"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","sourcesContent":["//actions\nconst AIRPORTS_FETCH = 'AIRPORTS_FETCH';\nconst AIRPORT_FETCH = 'AIRPORT_FETCH';\nconst AIRPORT_CREATE = 'AIRPORT_CREATE';\nconst AIRPORT_UPDATE = 'AIRPORT_UPDATE';\nconst AIRPORT_DELETE = 'AIRPORT_DELETE';\n\n//effects\nexport const fetchAirports = payload => {\n  return dispatch => {\n    fetch('http://localhost:3001/airports')\n    .then(res => res.json()).then(airports => {\n      dispatch({\n        type: AIRPORTS_FETCH,\n        airports: [...airports],\n      });\n    });\n  };\n};\n\nexport const fetchAirportById = (id) => {\n  return dispatch => {\n    fetch(`http://localhost:3001/airport/${id}`)\n    .then(res => res.json())\n    .then(airport => {\n      dispatch({\n        type: AIRPORT_FETCH,\n        airport,\n      });\n    });\n  };\n};\n\nexport const createAirport = (payload) => {\n  const reqOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload)\n  }\n\n  return dispatch => {\n    fetch('http://localhost:3001/airports', reqOptions)\n    .then(res => {\n      console.log(res.body)\n      return res.json();\n    })\n    .then(data => {\n      dispatch({\n        type: AIRPORT_CREATE,\n        data\n      });\n      }\n    )\n  }\n}\n\n/*export const updateAirport = (payload) => {\n  const reqOptions = {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload)\n  }\n\n  return dispatch => {\n    fetch(`http://localhost:3001/airport/${payload.id}`, reqOptions)\n    .then(res => res.json())\n    .then(data => {\n      dispatch({\n        type: AIRPORT_UPDATE,\n        data\n      });\n      }\n    )\n  }\n}*/\n//new\nexport const updateAirport = (airport) => {\n  const reqOptions = {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload)\n  }\n  return (dispatch) => {\n    return fetch(`http://localhost:3001/airport/${payload.id}`, reqOptions)\n    .then(response => {\n      dispatch({\n        type: AIRPORT_UPDATE,\n        data\n      });\n    }).catch(error => {\n      throw(error);\n    });\n  };\n}\n\nexport const deleteAirport = (id) => {\n  return dispatch => {\n    fetch(`http://localhost:3001/airport/${id}`, { method: 'DELETE' })\n    .then((res) =>{\n      dispatch({\n        type: AIRPORT_DELETE,\n      });\n      }\n    )\n  }\n}\n\n//reducer\nconst airportsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case AIRPORTS_FETCH: {\n      return {\n        ...state,\n        airports: [...action.airports],\n      }\n    }\n\n    case AIRPORT_FETCH: {\n      return {\n        ...state,\n        airport: action.airports,\n      }\n    }\n\n    case AIRPORT_UPDATE: {\n      return [\n        ...state.filter(airport => airport.id !== action.airport.id),\n        Object.assign({}, action.airport)\n      ]\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default airportsReducer;"]},"metadata":{},"sourceType":"module"}