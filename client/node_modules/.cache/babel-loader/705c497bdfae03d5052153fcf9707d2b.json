{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/matej/Documents/2esys/client/src/components/airports/form/AirportForm.jsx\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField, Button } from '@material-ui/core';\nimport GoogleMapReact from 'google-map-react';\nimport RoomIcon from '@material-ui/icons/Room';\n\nclass AirportForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = data => {\n      data.location = `${this.state.lat}, ${this.state.lng}`;\n      delete data.departingFrom;\n      delete data.landingTo;\n\n      if (this.props.airport && this.props.airport.id) {\n        data.id = this.props.airport.id;\n      }\n\n      this.props.onSubmit(data);\n    };\n\n    this.handleCancel = () => {\n      this.props.onCancel();\n    };\n\n    this.mapLoaded = map => {\n      this.googleMaps = map;\n    };\n\n    this.onMarkerMove = (key, currentValues, newValues) => {\n      this.setState({\n        draggable: false\n      });\n      this.changeLatitude(null, newValues.lat);\n      this.changeLongitude(null, newValues.lng);\n    };\n\n    this.onMarkerDown = () => {\n      this.setState({\n        draggable: true\n      });\n    };\n\n    this.changeLatitude = (e, val) => {\n      this.setState({\n        lat: val\n      });\n    };\n\n    this.changeLongitude = (e, val) => {\n      this.setState({\n        lng: val\n      });\n    };\n\n    this.state = {\n      mapZoom: 12,\n      draggable: true,\n      lat: this.props.airport === undefined ? 45.746686123840526 : parseFloat(this.props.airport.location.split(', ')[0]),\n      lng: this.props.airport === undefined ? 16.045964602812305 : parseFloat(this.props.airport.location.split(', ')[1])\n    };\n    this.googleMaps = null;\n  }\n\n  render() {\n    const {\n      airport,\n      airports,\n      countries\n    } = this.props;\n    let availableAirports;\n\n    if (airports && airports.length) {\n      availableAirports = airports.filter(availableAirport => airport.id !== availableAirport.id);\n    } else {\n      availableAirports = [];\n    }\n\n    const marker = {\n      id: airport === undefined ? null : airport.id,\n      size: {\n        width: 62,\n        height: 60\n      },\n      origin: {\n        x: 15 / 62,\n        y: 1\n      },\n      withText: false\n    };\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: airport && airport.name ? airport.name : '',\n        country: airport && airport.country ? airport.country : '',\n        departingFrom: airport && airport.departingFrom ? airport.departingFrom : '',\n        landingTo: airport && airport.landingTo ? airport.landingTo : ''\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        this.handleSubmit(values);\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country\",\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"country\",\n          name: \"country\",\n          placeholder: \"Country\",\n          as: \"select\",\n          children: countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: country.id,\n            children: country.name\n          }, country.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"departingFrom\",\n          children: \"Departing from\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"departingFrom\",\n          name: \"departingFrom\",\n          placeholder: \"Departing from\",\n          as: \"select\",\n          disabled: availableAirports.length <= 0,\n          children: availableAirports.map(airport => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: availableAirport.id,\n            children: availableAirport.name\n          }, airport.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"landingTo\",\n          children: \"Landing to\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"landingTo\",\n          name: \"landingTo\",\n          placeholder: \"Landing to\",\n          as: \"select\",\n          disabled: availableAirports.length <= 0,\n          children: availableAirports.map(airport => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: availableAirport.id,\n            children: availableAirport.name\n          }, airport.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"location\",\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 300,\n            width: 500\n          },\n          children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n            bootstrapURLKeys: {\n              key: 'AIzaSyCE_hqyzF4Zm4T3py8ieljazaeyiwa678A'\n            },\n            name: \"map\",\n            defaultZoom: 10,\n            center: {\n              lat: airport === undefined ? 45.746686123840526 : parseFloat(airport.location.split(', ')[0]),\n              lng: airport === undefined ? 16.045964602812305 : parseFloat(airport.location.split(', ')[1])\n            },\n            onChildMouseUp: this.onMarkerDown,\n            onChildMouseMove: this.onMarkerMove,\n            onGoogleApiLoaded: this.mapLoaded,\n            yesIWantToUseGoogleMapApiInternals: true,\n            draggable: this.state.draggable,\n            children: /*#__PURE__*/_jsxDEV(RoomIcon, {\n              marker: marker,\n              lat: this.state.lat,\n              lng: this.state.lng\n            }, airport === undefined ? null : airport.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: this.handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AirportForm;","map":{"version":3,"sources":["/home/matej/Documents/2esys/client/src/components/airports/form/AirportForm.jsx"],"names":["React","Formik","Form","Field","ErrorMessage","TextField","Button","GoogleMapReact","RoomIcon","AirportForm","Component","constructor","props","handleSubmit","data","location","state","lat","lng","departingFrom","landingTo","airport","id","onSubmit","handleCancel","onCancel","mapLoaded","map","googleMaps","onMarkerMove","key","currentValues","newValues","setState","draggable","changeLatitude","changeLongitude","onMarkerDown","e","val","mapZoom","undefined","parseFloat","split","render","airports","countries","availableAirports","length","filter","availableAirport","marker","size","width","height","origin","x","y","withText","name","country","values","setSubmitting","isSubmitting"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,YAA7B,QAAgD,QAAhD;AACA,SAAQC,SAAR,EAAmBC,MAAnB,QAAgC,mBAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,WAAN,SAA0BT,KAAK,CAACU,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,YAZmB,GAYJC,IAAI,IAAI;AACrBA,MAAAA,IAAI,CAACC,QAAL,GAAiB,GAAE,KAAKC,KAAL,CAAWC,GAAI,KAAI,KAAKD,KAAL,CAAWE,GAAI,EAArD;AACA,aAAOJ,IAAI,CAACK,aAAZ;AACA,aAAOL,IAAI,CAACM,SAAZ;;AACA,UAAI,KAAKR,KAAL,CAAWS,OAAX,IAAsB,KAAKT,KAAL,CAAWS,OAAX,CAAmBC,EAA7C,EAAiD;AAC/CR,QAAAA,IAAI,CAACQ,EAAL,GAAU,KAAKV,KAAL,CAAWS,OAAX,CAAmBC,EAA7B;AACD;;AAED,WAAKV,KAAL,CAAWW,QAAX,CAAoBT,IAApB;AACD,KArBkB;;AAAA,SAuBnBU,YAvBmB,GAuBJ,MAAM;AACnB,WAAKZ,KAAL,CAAWa,QAAX;AACD,KAzBkB;;AAAA,SA2BnBC,SA3BmB,GA2BNC,GAAD,IAAS;AACnB,WAAKC,UAAL,GAAkBD,GAAlB;AACD,KA7BkB;;AAAA,SA+BnBE,YA/BmB,GA+BJ,CAACC,GAAD,EAAMC,aAAN,EAAqBC,SAArB,KAAmC;AAChD,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE;AADC,OAAd;AAGA,WAAKC,cAAL,CAAoB,IAApB,EAA0BH,SAAS,CAACf,GAApC;AACA,WAAKmB,eAAL,CAAqB,IAArB,EAA2BJ,SAAS,CAACd,GAArC;AACD,KArCkB;;AAAA,SAuCnBmB,YAvCmB,GAuCJ,MAAM;AACnB,WAAKJ,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD,KA3CkB;;AAAA,SA6CnBC,cA7CmB,GA6CF,CAACG,CAAD,EAAIC,GAAJ,KAAY;AAC3B,WAAKN,QAAL,CAAc;AACZhB,QAAAA,GAAG,EAAEsB;AADO,OAAd;AAGD,KAjDkB;;AAAA,SAmDnBH,eAnDmB,GAmDD,CAACE,CAAD,EAAIC,GAAJ,KAAY;AAC5B,WAAKN,QAAL,CAAc;AACZf,QAAAA,GAAG,EAAEqB;AADO,OAAd;AAGD,KAvDkB;;AAEjB,SAAKvB,KAAL,GAAa;AACXwB,MAAAA,OAAO,EAAE,EADE;AAEXN,MAAAA,SAAS,EAAE,IAFA;AAGXjB,MAAAA,GAAG,EAAE,KAAKL,KAAL,CAAWS,OAAX,KAAuBoB,SAAvB,GAAmC,kBAAnC,GAAwDC,UAAU,CAAC,KAAK9B,KAAL,CAAWS,OAAX,CAAmBN,QAAnB,CAA4B4B,KAA5B,CAAkC,IAAlC,EAAwC,CAAxC,CAAD,CAH5D;AAIXzB,MAAAA,GAAG,EAAE,KAAKN,KAAL,CAAWS,OAAX,KAAuBoB,SAAvB,GAAmC,kBAAnC,GAAwDC,UAAU,CAAC,KAAK9B,KAAL,CAAWS,OAAX,CAAmBN,QAAnB,CAA4B4B,KAA5B,CAAkC,IAAlC,EAAwC,CAAxC,CAAD;AAJ5D,KAAb;AAOA,SAAKf,UAAL,GAAkB,IAAlB;AACD;;AA+CDgB,EAAAA,MAAM,GAAI;AACR,UAAM;AAACvB,MAAAA,OAAD;AAAUwB,MAAAA,QAAV;AAAoBC,MAAAA;AAApB,QAAiC,KAAKlC,KAA5C;AAEA,QAAImC,iBAAJ;;AAEA,QAAIF,QAAQ,IAAIA,QAAQ,CAACG,MAAzB,EAAiC;AAC/BD,MAAAA,iBAAiB,GAAGF,QAAQ,CAACI,MAAT,CAAgBC,gBAAgB,IAAI7B,OAAO,CAACC,EAAR,KAAe4B,gBAAgB,CAAC5B,EAApE,CAApB;AACD,KAFD,MAEO;AACLyB,MAAAA,iBAAiB,GAAG,EAApB;AACD;;AAED,UAAMI,MAAM,GAAG;AACb7B,MAAAA,EAAE,EAAED,OAAO,KAAKoB,SAAZ,GAAwB,IAAxB,GAA+BpB,OAAO,CAACC,EAD9B;AAEb8B,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,MAAM,EAAE;AAArB,OAFO;AAGbC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,CAAC,EAAE,KAAK,EAAV;AAAcC,QAAAA,CAAC,EAAE;AAAjB,OAHK;AAIbC,MAAAA,QAAQ,EAAE;AAJG,KAAf;AAOA,wBACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbC,QAAAA,IAAI,EAAEtC,OAAO,IAAIA,OAAO,CAACsC,IAAnB,GAA0BtC,OAAO,CAACsC,IAAlC,GAAyC,EADlC;AAEbC,QAAAA,OAAO,EAAEvC,OAAO,IAAIA,OAAO,CAACuC,OAAnB,GAA6BvC,OAAO,CAACuC,OAArC,GAA+C,EAF3C;AAGbzC,QAAAA,aAAa,EAAEE,OAAO,IAAIA,OAAO,CAACF,aAAnB,GAAmCE,OAAO,CAACF,aAA3C,GAA2D,EAH7D;AAIbC,QAAAA,SAAS,EAAEC,OAAO,IAAIA,OAAO,CAACD,SAAnB,GAA+BC,OAAO,CAACD,SAAvC,GAAmD;AAJjD,OADjB;AAOE,MAAA,QAAQ,EAAE,CAACyC,MAAD,EAAS;AAACC,QAAAA;AAAD,OAAT,KAA6B;AACrC,aAAKjD,YAAL,CAAkBgD,MAAlB;AACD,OATH;AAAA,gBAWG,CAAC;AAACE,QAAAA;AAAD,OAAD,kBACC,QAAC,IAAD;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,MAAV;AAAiB,UAAA,IAAI,EAAC,MAAtB;AAA6B,UAAA,WAAW,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,SAAV;AAAoB,UAAA,IAAI,EAAC,SAAzB;AAAmC,UAAA,WAAW,EAAC,SAA/C;AAAyD,UAAA,EAAE,EAAC,QAA5D;AAAA,oBACGjB,SAAS,CAACnB,GAAV,CAAciC,OAAO,iBAAK;AAAyB,YAAA,KAAK,EAAEA,OAAO,CAACtC,EAAxC;AAAA,sBAA6CsC,OAAO,CAACD;AAArD,aAAaC,OAAO,CAACtC,EAArB;AAAA;AAAA;AAAA;AAAA,kBAA1B;AADH;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAO,UAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,QAAC,KAAD;AACE,UAAA,EAAE,EAAC,eADL;AAEE,UAAA,IAAI,EAAC,eAFP;AAGE,UAAA,WAAW,EAAC,gBAHd;AAIE,UAAA,EAAE,EAAC,QAJL;AAKE,UAAA,QAAQ,EAAEyB,iBAAiB,CAACC,MAAlB,IAA4B,CALxC;AAAA,oBAOGD,iBAAiB,CAACpB,GAAlB,CAAsBN,OAAO,iBAC5B;AAAyB,YAAA,KAAK,EAAE6B,gBAAgB,CAAC5B,EAAjD;AAAA,sBAAsD4B,gBAAgB,CAACS;AAAvE,aAAatC,OAAO,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,kBADD;AAPH;AAAA;AAAA;AAAA;AAAA,gBAVF,eAqBE;AAAA;AAAA;AAAA;AAAA,gBArBF,eAsBE;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF,eAuBE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,WAAV;AAAsB,UAAA,IAAI,EAAC,WAA3B;AAAuC,UAAA,WAAW,EAAC,YAAnD;AAAgE,UAAA,EAAE,EAAC,QAAnE;AAA4E,UAAA,QAAQ,EAAEyB,iBAAiB,CAACC,MAAlB,IAA4B,CAAlH;AAAA,oBACGD,iBAAiB,CAACpB,GAAlB,CAAsBN,OAAO,iBAC5B;AAAyB,YAAA,KAAK,EAAE6B,gBAAgB,CAAC5B,EAAjD;AAAA,sBAAsD4B,gBAAgB,CAACS;AAAvE,aAAatC,OAAO,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAvBF,eA4BE;AAAA;AAAA;AAAA;AAAA,gBA5BF,eA6BE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF,eA8BI;AAAK,UAAA,KAAK,EAAE;AAAEgC,YAAAA,MAAM,EAAE,GAAV;AAAeD,YAAAA,KAAK,EAAE;AAAtB,WAAZ;AAAA,iCACE,QAAC,cAAD;AACE,YAAA,gBAAgB,EAAE;AAACvB,cAAAA,GAAG,EAAE;AAAN,aADpB;AAEE,YAAA,IAAI,EAAC,KAFP;AAGE,YAAA,WAAW,EAAE,EAHf;AAIE,YAAA,MAAM,EAAE;AACNb,cAAAA,GAAG,EAAEI,OAAO,KAAKoB,SAAZ,GAAwB,kBAAxB,GAA6CC,UAAU,CAACrB,OAAO,CAACN,QAAR,CAAiB4B,KAAjB,CAAuB,IAAvB,EAA6B,CAA7B,CAAD,CADtD;AAENzB,cAAAA,GAAG,EAAEG,OAAO,KAAKoB,SAAZ,GAAwB,kBAAxB,GAA6CC,UAAU,CAACrB,OAAO,CAACN,QAAR,CAAiB4B,KAAjB,CAAuB,IAAvB,EAA6B,CAA7B,CAAD;AAFtD,aAJV;AAQE,YAAA,cAAc,EAAE,KAAKN,YARvB;AASE,YAAA,gBAAgB,EAAE,KAAKR,YATzB;AAUE,YAAA,iBAAiB,EAAE,KAAKH,SAV1B;AAWE,YAAA,kCAAkC,MAXpC;AAYE,YAAA,SAAS,EAAE,KAAKV,KAAL,CAAWkB,SAZxB;AAAA,mCAcE,QAAC,QAAD;AAEE,cAAA,MAAM,EAAEiB,MAFV;AAGE,cAAA,GAAG,EAAE,KAAKnC,KAAL,CAAWC,GAHlB;AAIE,cAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE;AAJlB,eACOG,OAAO,KAAKoB,SAAZ,GAAwB,IAAxB,GAA+BpB,OAAO,CAACC,EAD9C;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA9BJ,eAqDE;AAAA;AAAA;AAAA;AAAA,gBArDF,eAsDE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,KAAK,EAAC,SAA5B;AAAsC,UAAA,OAAO,EAAC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtDF,eAyDE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAE,KAAKE,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,YADF;AA6ED;;AAzJuC;;AA4J1C,eAAef,WAAf","sourcesContent":["import React from 'react';\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\nimport {TextField, Button} from '@material-ui/core';\nimport GoogleMapReact from 'google-map-react';\nimport RoomIcon from '@material-ui/icons/Room';\n\nclass AirportForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapZoom: 12,\n      draggable: true,\n      lat: this.props.airport === undefined ? 45.746686123840526 : parseFloat(this.props.airport.location.split(', ')[0]),\n      lng: this.props.airport === undefined ? 16.045964602812305 : parseFloat(this.props.airport.location.split(', ')[1]),\n    };\n\n    this.googleMaps = null;\n  }\n\n  handleSubmit = data => {\n    data.location = `${this.state.lat}, ${this.state.lng}`\n    delete data.departingFrom;\n    delete data.landingTo;\n    if (this.props.airport && this.props.airport.id) {\n      data.id = this.props.airport.id;\n    }\n\n    this.props.onSubmit(data);\n  };\n\n  handleCancel = () => {\n    this.props.onCancel();\n  };\n\n  mapLoaded = (map) => {\n    this.googleMaps = map;\n  };\n\n  onMarkerMove = (key, currentValues, newValues) => {\n    this.setState({\n      draggable: false,\n    });\n    this.changeLatitude(null, newValues.lat);\n    this.changeLongitude(null, newValues.lng);\n  };\n\n  onMarkerDown = () => {\n    this.setState({\n      draggable: true,\n    });\n  };\n\n  changeLatitude = (e, val) => {\n    this.setState({\n      lat: val,\n    });\n  };\n\n  changeLongitude = (e, val) => {\n    this.setState({\n      lng: val,\n    });\n  };\n\n  render () {\n    const {airport, airports, countries} = this.props;\n\n    let availableAirports; \n    \n    if (airports && airports.length) {\n      availableAirports = airports.filter(availableAirport => airport.id !== availableAirport.id)\n    } else {\n      availableAirports = [];\n    }\n\n    const marker = {\n      id: airport === undefined ? null : airport.id,\n      size: { width: 62, height: 60 },\n      origin: { x: 15 / 62, y: 1 },\n      withText: false,\n    };\n\n    return (\n      <Formik\n        initialValues={{\n          name: airport && airport.name ? airport.name : '',\n          country: airport && airport.country ? airport.country : '',\n          departingFrom: airport && airport.departingFrom ? airport.departingFrom : '',\n          landingTo: airport && airport.landingTo ? airport.landingTo : '',\n        }}\n        onSubmit={(values, {setSubmitting}) => {\n          this.handleSubmit(values);\n        }}\n      >\n        {({isSubmitting}) => (\n          <Form>\n            <label htmlFor=\"name\">Name</label>\n            <Field id=\"name\" name=\"name\" placeholder=\"Name\" />\n            <br />\n            <label htmlFor=\"country\">Country</label>\n            <Field id=\"country\" name=\"country\" placeholder=\"Country\" as='select'>\n              {countries.map(country => (<option key={country.id} value={country.id}>{country.name}</option>))}\n            </Field>\n            <br />\n            <label htmlFor=\"departingFrom\">Departing from</label>\n            <Field\n              id=\"departingFrom\"\n              name=\"departingFrom\"\n              placeholder=\"Departing from\"\n              as='select'\n              disabled={availableAirports.length <= 0}\n            >\n              {availableAirports.map(airport => (\n                <option key={airport.id} value={availableAirport.id}>{availableAirport.name}</option>\n              ))}\n            </Field>\n            <br />\n            <label htmlFor=\"landingTo\">Landing to</label>\n            <Field id=\"landingTo\" name=\"landingTo\" placeholder=\"Landing to\" as='select' disabled={availableAirports.length <= 0}>\n              {availableAirports.map(airport => (\n                <option key={airport.id} value={availableAirport.id}>{availableAirport.name}</option>\n              ))}\n            </Field>\n            <br />\n            <label htmlFor=\"location\">Location</label>\n              <div style={{ height: 300, width: 500 }}>\n                <GoogleMapReact\n                  bootstrapURLKeys={{key: 'AIzaSyCE_hqyzF4Zm4T3py8ieljazaeyiwa678A'}}\n                  name=\"map\"\n                  defaultZoom={10}\n                  center={{\n                    lat: airport === undefined ? 45.746686123840526 : parseFloat(airport.location.split(', ')[0]),\n                    lng: airport === undefined ? 16.045964602812305 : parseFloat(airport.location.split(', ')[1]),\n                  }}\n                  onChildMouseUp={this.onMarkerDown}\n                  onChildMouseMove={this.onMarkerMove}\n                  onGoogleApiLoaded={this.mapLoaded}\n                  yesIWantToUseGoogleMapApiInternals\n                  draggable={this.state.draggable}\n                >\n                  <RoomIcon\n                    key={airport === undefined ? null : airport.id}\n                    marker={marker}\n                    lat={this.state.lat}\n                    lng={this.state.lng}\n                  />\n                </GoogleMapReact>\n              </div>\n            <br />\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n              Submit\n            </Button>\n            <Button variant=\"contained\" onClick={this.handleCancel}>\n              Cancel\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport default AirportForm;\n"]},"metadata":{},"sourceType":"module"}